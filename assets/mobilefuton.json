{"_id":"_design/mobilefuton","README":"## Mobile Futon\n\nThis is a very basic Couchapp that allows you to browse data and applications stored within CouchDB with a UI that is focused on mobile devices\n\n### Usage\n\nMobile Futon is a plain couchapp, so to get started just\n\n    $ git clone git@github.com:daleharvey/mobilefuton.git\n    $ cd mobilefuton\n    $ couchapp init\n    $ couchapp push http://127.0.0.1:5984","mobilefuton":"{\"_id\":\"_design/mobilefuton\",\"_rev\":\"147-2b01b706fa409fa1aebfdeb2a1ca5d98\",\"README\":\"## Mobile Futon\\n\\nThis is a very basic Couchapp that allows you to browse data and applications stored within CouchDB with a UI that is focused on mobile devices\\n\\n### Usage\\n\\nMobile Futon is a plain couchapp, so to get started just\\n\\n    $ git clone git@github.com:daleharvey/mobilefuton.git\\n    $ cd mobilefuton\\n    $ couchapp init\\n    $ couchapp push http://127.0.0.1:5984\",\"mobilefuton\":{\"_id\":\"_design/mobilefuton\",\"README\":\"## Mobile Futon\\n\\nThis is a very basic Couchapp that allows you to browse data and applications stored within CouchDB with a UI that is focused on mobile devices\\n\\n### Usage\\n\\nMobile Futon is a plain couchapp, so to get started just\\n\\n    $ git clone git@github.com:daleharvey/mobilefuton.git\\n    $ cd mobilefuton\\n    $ couchapp init\\n    $ couchapp push http://127.0.0.1:5984\",\"couchapp\":{\"manifest\":[\"_id\",\"README.md\"],\"signatures\":{\"jquery-1.6.min.js\":\"3c379d7fafbaafecb78c98dd863da\",\"index.html\":\"1c3897775511295b915715938ca1596\",\"css/main.css\":\"b6c7ec9f165df4f55ce72de98bd6c31\",\"img/icon72.png\":\"4a71769ab5da355d6b6ca83a576e8b9\",\"img/favicon.png\":\"78d6a3654153112cb7a98bb36529f28\",\"js/utils.js\":\"bd8f1baa5897786c818e77d6231feed3\",\"js/sha1.js\":\"281a4ec66a809c4d3ae6fc8bb31f536\",\"js/router.js\":\"79bcc23f8851d52c618e9b448581ce0\",\"js/renderer.js\":\"4c9dbbbe2390583ebf1284ad4e6995\",\"js/mustache.js\":\"717514442c157cd97812ce1bf9199b3e\",\"js/modernizr-1.7.min.js\":\"52b8fd529e8142bdb6c4f9e7f55aaec0\",\"js/mobile.futon.js\":\"7854881da0d2fbfe954377d193cc59d3\",\"js/jquery.couch.js\":\"3e893f469d8327277676da1c898e20f1\",\"js/jquery-1.5.2.min.js\":\"e85aed5c30d734f1e3646e030d7a817\",\"js/google.fastbutton.js\":\"9292443648cfc3b8388fc1272ef1a6c\"},\"objects\":{}},\"_attachments\":{\"css/main.css\":{\"content_type\":\"text/css\",\"revpos\":146,\"data\":\"\"},\"js/renderer.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":140,\"data\":\"dmFyIFJlbmRlcmVyID0gKGZ1bmN0aW9uKCkgewoKICB2YXIgcGFuZVdpZHRoID0gMDsKICB2YXIgY3VycmVudE9mZnNldCA9IDA7CiAgdmFyIGN1cnJlbnRfdHBsID0gbnVsbDsKICB2YXIgbGFzdFBhbmUgPSBudWxsOwoKICAkKHdpbmRvdykuYmluZCgicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgcGFuZVdpZHRoID0gJCgiYm9keSIpLndpZHRoKCk7CiAgfSk7CiAgJCh3aW5kb3cpLnJlc2l6ZSgpOwoKCiAgZnVuY3Rpb24gdHJhbnNmb3JtWShkb20sIHgpIHsKICAgIGlmIChNb2Rlcm5penIuY3NzdHJhbnNmb3JtczNkKSB7CiAgICAgIGRvbS5jc3MoIi1tb3otdHJhbnNmb3JtIiwgInRyYW5zbGF0ZTNkKDAsICIgKyB4ICsgInB4LCAwKSIpCiAgICAgICAgLmNzcygiLXdlYmtpdC10cmFuc2Zvcm0iLCAidHJhbnNsYXRlM2QoMCwgIiArIHggKyAicHgsIDApIik7CiAgICB9IGVsc2UgewogICAgICBkb20uY3NzKCItbW96LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwgIiArIHggKyAicHgpIikKICAgICAgICAuY3NzKCItd2Via2l0LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwgIiArIHggKyAicHgpIik7CiAgICB9CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zvcm1YKGRvbSwgeCkgewogICAgaWYgKE1vZGVybml6ci5jc3N0cmFuc2Zvcm1zM2QpIHsKICAgICAgZG9tLmNzcygiLW1vei10cmFuc2Zvcm0iLCAidHJhbnNsYXRlM2QoIiArIHggKyAicHgsIDAsIDApIikKICAgICAgICAuY3NzKCItd2Via2l0LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUzZCgiICsgeCArICJweCwgMCwgMCkiKTsKICAgIH0gZWxzZSB7CiAgICAgIGRvbS5jc3MoIi1tb3otdHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgeCArICJweCwgMCkiKQogICAgICAgIC5jc3MoIi13ZWJraXQtdHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgeCArICJweCwgMCkiKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHJlbmRlcih0cGwsIGRhdGEsIG9wdHMsIGNhbGxiYWNrKSB7CgogICAgd2luZG93LnNjcm9sbFRvKDAsIDApOwoKICAgIG9wdHMgPSBvcHRzIHx8IHt9OwogICAgZGF0YSA9IGRhdGEgfHwge307CgogICAgdmFyIHJlbmRlcmVkID0gTXVzdGFjaGUudG9faHRtbCgkKCIjIiArIHRwbCkuaHRtbCgpLCBkYXRhKSwKICAgICRwYW5lID0gJCgiPGRpdiBjbGFzcz0ncGFuZSc+PGRpdiBjbGFzcz0nY29udGVudCc+IiArIHJlbmRlcmVkICsgIjwvZGl2PjwvZGl2PiIpOwoKICAgIG1ha2VMaW5rc0Zhc3QoJHBhbmUpOwoKICAgIGlmIChjYWxsYmFjaykgewogICAgICBjYWxsYmFjaygkcGFuZSk7CiAgICB9CgogICAgaWYgKG9wdHMubm90cmFuc2l0aW9uIHx8IChvcHRzLnJvdXRlciAmJiBvcHRzLnJvdXRlci5yZWZyZXNoKSkgewoKICAgICAgJHBhbmUuY3NzKHsibGVmdCI6Y3VycmVudE9mZnNldH0pLmFwcGVuZFRvKCQoIiNjb250ZW50IikpOwogICAgICBpZiAobGFzdFBhbmUpIHsKICAgICAgICBsYXN0UGFuZS5yZW1vdmUoKTsKICAgICAgfQogICAgICBsYXN0UGFuZSA9ICRwYW5lOwogICAgLy8gfSBlbHNlIGlmICh0cmFuc2l0aW9uID09PSAnc2xpZGVVcCcpIHsKCiAgICAvLyAgICQoIiNjb250ZW50Iikub25lKCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQiLCBmdW5jdGlvbigpIHsKICAgIC8vICAgICBpZiAobGFzdFBhbmUpIHsKICAgIC8vICAgICAgIGxhc3RQYW5lLmhpZGUoKTsKICAgIC8vICAgICB9CiAgICAvLyAgIH0pOwoKICAgIC8vICAgc2xpZGVQYW5lID0gJHBhbmUuYWRkQ2xhc3MoInNsaWRlcGFuZSIpCiAgICAvLyAgICAgLmNzcyh7bGVmdDpjdXJyZW50T2Zmc2V0LCB0b3A6LSQod2luZG93KS5oZWlnaHQoKSwgJ3otaW5kZXgnOiAzfSkKICAgIC8vICAgICAuYXBwZW5kVG8oIiNjb250ZW50Iik7CiAgICAvLyAgIHRyYW5zZm9ybVkoc2xpZGVQYW5lLCAkKHdpbmRvdykuaGVpZ2h0KCkpOwoKICAgIC8vIH0gZWxzZSBpZiAoc2xpZGVQYW5lKSB7CgogICAgLy8gICBpZiAobGFzdFBhbmUpIHsKICAgIC8vICAgICBsYXN0UGFuZS5yZW1vdmUoKTsKICAgIC8vICAgICBsYXN0UGFuZSA9IG51bGw7CiAgICAvLyAgIH0KCiAgICAvLyAgICRwYW5lLmNzcyh7ImxlZnQiOmN1cnJlbnRPZmZzZXR9KS5hcHBlbmRUbygkKCIjY29udGVudCIpKTsKICAgIC8vICAgdHJhbnNmb3JtWShzbGlkZVBhbmUsIDApOwogICAgLy8gICBsYXN0UGFuZSA9ICRwYW5lOwoKICAgIC8vICAgc2xpZGVQYW5lLm9uZSgid2Via2l0VHJhbnNpdGlvbkVuZCB0cmFuc2l0aW9uZW5kIiwgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgc2xpZGVQYW5lLnJlbW92ZSgpOwogICAgLy8gICAgIHNsaWRlUGFuZSA9IG51bGw7CiAgICAvLyAgIH0pOwoKICAgIH0gZWxzZSB7CgogICAgICBpZiAoY3VycmVudF90cGwpIHsKICAgICAgICB2YXIgZ29CYWNrID0gKG9wdHMucm91dGVyICYmIChvcHRzLnJvdXRlci5iYWNrIHx8IG9wdHMucm91dGVyLmhvbWUpKTsKICAgICAgICBjdXJyZW50T2Zmc2V0ICs9ICFnb0JhY2sgPyBwYW5lV2lkdGggOiAtcGFuZVdpZHRoOwogICAgICB9CgogICAgICB2YXIgdG1wID0gbGFzdFBhbmU7CiAgICAgICQoIiNjb250ZW50Iikub25lKCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQiLCBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodG1wKSB7CiAgICAgICAgICB0bXAucmVtb3ZlKCk7CiAgICAgICAgICB0bXAgPSBudWxsOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICB0cmFuc2Zvcm1YKCRwYW5lLCBjdXJyZW50T2Zmc2V0KTsKICAgICAgJHBhbmUuYXBwZW5kVG8oJCgiI2NvbnRlbnQiKSk7CgogICAgICB0cmFuc2Zvcm1YKCQoIiNjb250ZW50IiksIC1jdXJyZW50T2Zmc2V0KTsKICAgICAgbGFzdFBhbmUgPSAkcGFuZTsKICAgIH0KICAgIGN1cnJlbnRfdHBsID0gdHBsOwogIH0KCiAgcmV0dXJuIHsKICAgIHJlbmRlcjogcmVuZGVyCiAgfTsKfSk7Cg==\"},\"js/router.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":139,\"data\":\"dmFyIFJvdXRlciA9IChmdW5jdGlvbigpIHsKCiAgdmFyIFBBVEhfUkVQTEFDRVIgPSAiKFteXC9dKykiCiAgICAsIFBBVEhfTUFUQ0hFUiA9ICgvOihbXHdcZF0rKS9nKQogICAgLCBXSUxEX01BVENIRVIgPSAoL1wqKFtcd1xkXSspL2cpCiAgICAsIFdJTERfUkVQTEFDRVIgPSAiKC4qPykiCiAgICAsIGxhc3RQYWdlCiAgICAsIGhpc3RvcnkgPSBbXQogICAgLCBoYXNocGFyYW1zID0ge30KICAgICwgcGFyYW1zID0ge30KICAgICwgcm91dGVzID0ge0dFVDogW10sIFBPU1Q6IFtdfTsKCiAgJC5lYWNoKGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpLCBmdW5jdGlvbihpLCBwYXJhbSkgewogICAgdmFyIHRtcCA9IHBhcmFtLnNwbGl0KCI9Iik7CiAgICBwYXJhbXNbdG1wWzBdXSA9IHRtcFsxXTsKICB9KTsKCiAgLy8gTmVlZHMgbmFtZXNwYWNlZCBhbmQgZGVjb3VwbGVkIGFuZCBzdHVmZgogIGZ1bmN0aW9uIGluaXQocGFyZW50KSB7CiAgICAkKHBhcmVudCkuYmluZCgiaGFzaGNoYW5nZSIsIHVybENoYW5nZWQpLnRyaWdnZXIoImhhc2hjaGFuZ2UiKTsKICAgICQoZG9jdW1lbnQpLmJpbmQoInN1Ym1pdCIsIGZvcm1TdWJtaXR0ZWQpOwogIH0KCiAgZnVuY3Rpb24gYmFjaygpIHsKICAgIGhpc3RvcnkucG9wKCk7IC8vIGN1cnJlbnQgdXJsCiAgICBpZiAoaGlzdG9yeS5sZW5ndGggPiAwKSB7CiAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSAiIyIgKyBoaXN0b3J5LnBvcCgpOwogICAgfSBlbHNlIHsKICAgICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9ICIjIjsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGdldChwYXRoLCBjYikgewogICAgdmFyIG9iaiA9IHtwYXRoOnBhdGgsIGxvYWQ6Y2J9OwogICAgcm91dGVzLkdFVC5wdXNoKG9iaik7CiAgICByZXR1cm4gewogICAgICB1bmxvYWQ6IGZ1bmN0aW9uKHVubG9hZENhbGxiYWNrKSB7CiAgICAgICAgb2JqLnVubG9hZCA9IHVubG9hZENhbGxiYWNrOwogICAgICB9LAogICAgICBvcHRzOiBmdW5jdGlvbihvcHRzKSB7CiAgICAgICAgb2JqLm9wdHMgPSBvcHRzOwogICAgICB9CiAgICB9OwogIH0KCiAgZnVuY3Rpb24gcG9zdChwYXRoLCBjYikgewogICAgdmFyIG9iaiA9IHtwYXRoOnBhdGgsIGxvYWQ6Y2J9OwogICAgcm91dGVzLlBPU1QucHVzaChvYmopOwogICAgcmV0dXJuIHsKICAgICAgdW5sb2FkOiBmdW5jdGlvbih1bmxvYWRDYWxsYmFjaykgewogICAgICAgIG9iai51bmxvYWQgPSB1bmxvYWRDYWxsYmFjazsKICAgICAgfSwKICAgICAgb3B0czogZnVuY3Rpb24ob3B0cykgewogICAgICAgIG9iai5vcHRzID0gb3B0czsKICAgICAgfQogICAgfTsKICB9CgogIGZ1bmN0aW9uIHRvUmVnZXgocGF0aCkgewogICAgaWYgKHBhdGguY29uc3RydWN0b3IgPT0gU3RyaW5nKSB7CiAgICAgIHJldHVybiBuZXcgUmVnRXhwKCJeIiArIHBhdGgucmVwbGFjZShQQVRIX01BVENIRVIsIFBBVEhfUkVQTEFDRVIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoV0lMRF9NQVRDSEVSLCBXSUxEX1JFUExBQ0VSKSArIiQiKTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBwYXRoOwogICAgfQogIH0KCiAgZnVuY3Rpb24gcmVmcmVzaCgpIHsKICAgIHVybENoYW5nZWQobnVsbCwgeyJyb3V0ZXIiOiB7InJlZnJlc2giOiB0cnVlfX0pOwogIH0KCiAgZnVuY3Rpb24gdXJsQ2hhbmdlZChlLCBvcHRzKSB7CiAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgIGhpc3RvcnkucHVzaCgiIyIgKyAoZG9jdW1lbnQubG9jYXRpb24uaHJlZi5zcGxpdCgiIyIpWzFdIHx8ICIiKSk7CiAgICB0cmlnZ2VyKCJHRVQiLCAiIyIgKyAoZG9jdW1lbnQubG9jYXRpb24uaHJlZi5zcGxpdCgiIyIpWzFdIHx8ICIiKSwgbnVsbCwgbnVsbCwgb3B0cyk7CiAgfQoKICBmdW5jdGlvbiBmb3J3YXJkKHVybCkgewogICAgdHJpZ2dlcigiR0VUIiwgdXJsKTsKICB9CgogIGZ1bmN0aW9uIGZvcm1TdWJtaXR0ZWQoZSkgewoKICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIHZhciBhY3Rpb24gPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoImFjdGlvbiIpOwoKICAgIGlmIChhY3Rpb25bMF0gPT09ICIjIikgewogICAgICB0cmlnZ2VyKCJQT1NUIiwgYWN0aW9uLCBlLCBzZXJpYWxpemUoZS50YXJnZXQpKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHRyaWdnZXIodmVyYiwgdXJsLCBjdHgsIGRhdGEsIG9wdHMpIHsKCiAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgIGhhc2hwYXJhbXMgPSBbXTsKCiAgICAkLmVhY2goKHVybC5zcGxpdCgiPyIpWzFdIHx8ICIiKS5zcGxpdCgiJiIpLCBmdW5jdGlvbihpLCBwYXJhbSkgewogICAgICB2YXIgdG1wID0gcGFyYW0uc3BsaXQoIj0iKTsKICAgICAgaGFzaHBhcmFtc1t0bXBbMF1dID0gdG1wWzFdOwogICAgfSk7CgogICAgdmFyIG1hdGNoID0gbWF0Y2hQYXRoKHZlcmIsIHVybC5zcGxpdCgiPyIpWzBdKTsKCiAgICBpZiAobWF0Y2gpIHsKCiAgICAgIHZhciBhcmdzID0gbWF0Y2gubWF0Y2guc2xpY2UoMSk7CgogICAgICBpZiAodmVyYiA9PT0gIlBPU1QiKSB7CiAgICAgICAgYXJncy51bnNoaWZ0KGRhdGEpOwogICAgICAgIGFyZ3MudW5zaGlmdChjdHgpOwogICAgICB9CgogICAgICBpZiAobGFzdFBhZ2UgJiYgbGFzdFBhZ2UudW5sb2FkICYmIHZlcmIgPT09ICJHRVQiKSB7CiAgICAgICAgbGFzdFBhZ2UudW5sb2FkLmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICB9CgogICAgICB2YXIgb3BxID0gJC5leHRlbmQoe30sIG9wdHMsIG1hdGNoLmRldGFpbHMub3B0cyk7CiAgICAgIHZhciBpc0JhY2sgPSAoaGlzdG9yeS5sZW5ndGggPiAyICYmIHVybCA9PT0gaGlzdG9yeVtoaXN0b3J5Lmxlbmd0aC0zXSk7CgogICAgICBpZiAoaXNCYWNrKSB7CiAgICAgICAgb3BxLnJvdXRlciA9IG9wcS5yb3V0ZXIgfHwge307CiAgICAgICAgb3BxLnJvdXRlci5iYWNrID0gdHJ1ZTsKICAgICAgICBoaXN0b3J5Lmxlbmd0aCAtPSAyOwogICAgICB9CgogICAgICBpZiAobWF0Y2gubWF0Y2hbMF0gPT09ICIjLyIpIHsKICAgICAgICBvcHEucm91dGVyID0gb3BxLnJvdXRlciB8fCB7fTsKICAgICAgICBvcHEucm91dGVyLmhvbWUgPSB0cnVlOwogICAgICB9CgogICAgICBhcmdzLnVuc2hpZnQob3BxKTsKICAgICAgbWF0Y2guZGV0YWlscy5sb2FkLmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICBpZiAodmVyYiA9PT0gIkdFVCIpIHsKICAgICAgICBsYXN0UGFnZSA9IG1hdGNoLmRldGFpbHM7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIG1hdGNoZXNDdXJyZW50KG5lZWRsZSkgewogICAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoLnNsaWNlKDEpLm1hdGNoKHRvUmVnZXgobmVlZGxlKSk7CiAgfQoKICBmdW5jdGlvbiBtYXRjaFBhdGgodmVyYiwgcGF0aCkgewogICAgdmFyIGksIHRtcCwgYXJyID0gcm91dGVzW3ZlcmJdOwogICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICB0bXAgPSBwYXRoLm1hdGNoKHRvUmVnZXgoYXJyW2ldLnBhdGgpKTsKICAgICAgaWYgKHRtcCkgewogICAgICAgIHJldHVybiB7Im1hdGNoIjp0bXAsICJkZXRhaWxzIjphcnJbaV19OwogICAgICB9CiAgICB9CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBmdW5jdGlvbiBzZXJpYWxpemUob2JqKSB7CiAgICB2YXIgbyA9IHt9OwogICAgdmFyIGEgPSAkKG9iaikuc2VyaWFsaXplQXJyYXkoKTsKICAgICQuZWFjaChhLCBmdW5jdGlvbigpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSkgewogICAgICAgIGlmICghb1t0aGlzLm5hbWVdLnB1c2gpIHsKICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgIH0KICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlIHx8ICcnOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBvOwogIH0KCiAgZnVuY3Rpb24gcHJldmlvdXMoeCkgewogICAgeCA9IHggfHwgMDsKICAgIHJldHVybiBoaXN0b3J5Lmxlbmd0aCA+ICgxICsgeCkgPyBoaXN0b3J5W2hpc3RvcnkubGVuZ3RoIC0gKDIgKyB4KV06IGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gaGFzaHBhcmFtKGtleSkgewogICAgcmV0dXJuIGhhc2hwYXJhbXNba2V5XTsKICB9CgogIHJldHVybiB7IHByZXZpb3VzIDogcHJldmlvdXMKICAgICAgICAgLCByZWZyZXNoIDogcmVmcmVzaAogICAgICAgICAsIGZvcndhcmQgOiBmb3J3YXJkCiAgICAgICAgICwgYmFjayAgICA6IGJhY2sKICAgICAgICAgLCBnZXQgICAgIDogZ2V0CiAgICAgICAgICwgcG9zdCAgICA6IHBvc3QKICAgICAgICAgLCBpbml0ICAgIDogaW5pdAogICAgICAgICAsIG1hdGNoZXNDdXJyZW50IDogbWF0Y2hlc0N1cnJlbnQKICAgICAgICAgLCBoYXNocGFyYW0gOiBoYXNocGFyYW0KICAgICAgICAgLCBwYXJhbXMgOiBwYXJhbXMgfTsKCn0pOw==\"},\"img/icon72.png\":{\"content_type\":\"image/png\",\"revpos\":127,\"data\":\"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\"},\"index.html\":{\"content_type\":\"text/html\",\"revpos\":126,\"data\":\"\"},\"js/mobile.futon.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":124,\"data\":\"\"},\"js/google.fastbutton.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":89,\"data\":\"dmFyIGdvb2dsZSA9IHt9Owpnb29nbGUudWkgPSB7fTsKCmdvb2dsZS51aS5GYXN0QnV0dG9uID0gZnVuY3Rpb24oZWxlbWVudCwgaGFuZGxlcikgewogIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7CiAgdGhpcy5oYW5kbGVyID0gaGFuZGxlcjsKCiAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcywgZmFsc2UpOwogIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLCBmYWxzZSk7Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUuaGFuZGxlRXZlbnQgPSBmdW5jdGlvbihldmVudCkgewogIHN3aXRjaCAoZXZlbnQudHlwZSkgewogICAgY2FzZSAndG91Y2hzdGFydCc6IHRoaXMub25Ub3VjaFN0YXJ0KGV2ZW50KTsgYnJlYWs7CiAgICBjYXNlICd0b3VjaG1vdmUnOiB0aGlzLm9uVG91Y2hNb3ZlKGV2ZW50KTsgYnJlYWs7CiAgICBjYXNlICd0b3VjaGVuZCc6IHRoaXMub25DbGljayhldmVudCk7IGJyZWFrOwogICAgY2FzZSAnY2xpY2snOiB0aGlzLm9uQ2xpY2soZXZlbnQpOyBicmVhazsKICB9Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUub25Ub3VjaFN0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpIHsKICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCiAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcywgZmFsc2UpOwogIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcywgZmFsc2UpOwoKICB0aGlzLnN0YXJ0WCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WDsKICB0aGlzLnN0YXJ0WSA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WTsKfTsKCmdvb2dsZS51aS5GYXN0QnV0dG9uLnByb3RvdHlwZS5vblRvdWNoTW92ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgaWYgKE1hdGguYWJzKGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMuc3RhcnRYKSA+IDEwIHx8CiAgICAgIE1hdGguYWJzKGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSAtIHRoaXMuc3RhcnRZKSA+IDEwKSB7CiAgICB0aGlzLnJlc2V0KCk7CiAgfQp9OwoKZ29vZ2xlLnVpLkZhc3RCdXR0b24ucHJvdG90eXBlLm9uQ2xpY2sgPSBmdW5jdGlvbihldmVudCkgewogIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogIHRoaXMucmVzZXQoKTsKICB0aGlzLmhhbmRsZXIoZXZlbnQpOwoKICBpZiAoZXZlbnQudHlwZSA9PSAndG91Y2hlbmQnKSB7CiAgICBnb29nbGUuY2xpY2tidXN0ZXIucHJldmVudEdob3N0Q2xpY2sodGhpcy5zdGFydFgsIHRoaXMuc3RhcnRZKTsKICB9Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHsKICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLCBmYWxzZSk7CiAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLCBmYWxzZSk7Cn07Cgpnb29nbGUuY2xpY2tidXN0ZXIgPSB7fTsKCmdvb2dsZS5jbGlja2J1c3Rlci5wcmV2ZW50R2hvc3RDbGljayA9IGZ1bmN0aW9uKHgsIHkpIHsKICBnb29nbGUuY2xpY2tidXN0ZXIuY29vcmRpbmF0ZXMucHVzaCh4LCB5KTsKICB3aW5kb3cuc2V0VGltZW91dChnb29nbGUuY2xpY2tidXN0ZXIucG9wLCAyNTAwKTsKfTsKCmdvb2dsZS5jbGlja2J1c3Rlci5wb3AgPSBmdW5jdGlvbigpIHsKICBnb29nbGUuY2xpY2tidXN0ZXIuY29vcmRpbmF0ZXMuc3BsaWNlKDAsIDIpOwp9OwoKZ29vZ2xlLmNsaWNrYnVzdGVyLm9uQ2xpY2sgPSBmdW5jdGlvbihldmVudCkgewogIGZvciAodmFyIGkgPSAwOyBpIDwgZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzLmxlbmd0aDsgaSArPSAyKSB7CiAgICB2YXIgeCA9IGdvb2dsZS5jbGlja2J1c3Rlci5jb29yZGluYXRlc1tpXTsKICAgIHZhciB5ID0gZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzW2kgKyAxXTsKICAgIGlmIChNYXRoLmFicyhldmVudC5jbGllbnRYIC0geCkgPCAyNSAmJiBNYXRoLmFicyhldmVudC5jbGllbnRZIC0geSkgPCAyNSkgewogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIH0KICB9Cn07Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdvb2dsZS5jbGlja2J1c3Rlci5vbkNsaWNrLCB0cnVlKTsKZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzID0gW107\"},\"js/jquery-1.5.2.min.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"\"},\"js/jquery.couch.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"\"},\"js/modernizr-1.7.min.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"\"},\"js/mustache.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"\"},\"js/sha1.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"LyoNCiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMSwgYXMgZGVmaW5lZA0KICogaW4gRklQUyBQVUIgMTgwLTENCiAqIFZlcnNpb24gMi4xYSBDb3B5cmlnaHQgUGF1bCBKb2huc3RvbiAyMDAwIC0gMjAwMi4NCiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXQNCiAqIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBCU0QgTGljZW5zZQ0KICogU2VlIGh0dHA6Ly9wYWpob21lLm9yZy51ay9jcnlwdC9tZDUgZm9yIGRldGFpbHMuDQogKi8NCg0KLyoNCiAqIENvbmZpZ3VyYWJsZSB2YXJpYWJsZXMuIFlvdSBtYXkgbmVlZCB0byB0d2VhayB0aGVzZSB0byBiZSBjb21wYXRpYmxlIHdpdGgNCiAqIHRoZSBzZXJ2ZXItc2lkZSwgYnV0IHRoZSBkZWZhdWx0cyB3b3JrIGluIG1vc3QgY2FzZXMuDQogKi8NCnZhciBoZXhjYXNlID0gMDsgIC8qIGhleCBvdXRwdXQgZm9ybWF0LiAwIC0gbG93ZXJjYXNlOyAxIC0gdXBwZXJjYXNlICAgICAgICAqLw0KdmFyIGI2NHBhZCAgPSAiPSI7IC8qIGJhc2UtNjQgcGFkIGNoYXJhY3Rlci4gIj0iIGZvciBzdHJpY3QgUkZDIGNvbXBsaWFuY2UgICAqLw0KdmFyIGNocnN6ICAgPSA4OyAgLyogYml0cyBwZXIgaW5wdXQgY2hhcmFjdGVyLiA4IC0gQVNDSUk7IDE2IC0gVW5pY29kZSAgICAgICovDQoNCi8qDQogKiBUaGVzZSBhcmUgdGhlIGZ1bmN0aW9ucyB5b3UnbGwgdXN1YWxseSB3YW50IHRvIGNhbGwNCiAqIFRoZXkgdGFrZSBzdHJpbmcgYXJndW1lbnRzIGFuZCByZXR1cm4gZWl0aGVyIGhleCBvciBiYXNlLTY0IGVuY29kZWQgc3RyaW5ncw0KICovDQpmdW5jdGlvbiBoZXhfc2hhMShzKXtyZXR1cm4gYmluYjJoZXgoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBiNjRfc2hhMShzKXtyZXR1cm4gYmluYjJiNjQoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBzdHJfc2hhMShzKXtyZXR1cm4gYmluYjJzdHIoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBoZXhfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMmhleChjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQpmdW5jdGlvbiBiNjRfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMmI2NChjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQpmdW5jdGlvbiBzdHJfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMnN0cihjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQoNCi8qDQogKiBQZXJmb3JtIGEgc2ltcGxlIHNlbGYtdGVzdCB0byBzZWUgaWYgdGhlIFZNIGlzIHdvcmtpbmcNCiAqLw0KZnVuY3Rpb24gc2hhMV92bV90ZXN0KCkNCnsNCiAgcmV0dXJuIGhleF9zaGExKCJhYmMiKSA9PSAiYTk5OTNlMzY0NzA2ODE2YWJhM2UyNTcxNzg1MGMyNmM5Y2QwZDg5ZCI7DQp9DQoNCi8qDQogKiBDYWxjdWxhdGUgdGhlIFNIQS0xIG9mIGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMsIGFuZCBhIGJpdCBsZW5ndGgNCiAqLw0KZnVuY3Rpb24gY29yZV9zaGExKHgsIGxlbikNCnsNCiAgLyogYXBwZW5kIHBhZGRpbmcgKi8NCiAgeFtsZW4gPj4gNV0gfD0gMHg4MCA8PCAoMjQgLSBsZW4gJSAzMik7DQogIHhbKChsZW4gKyA2NCA+PiA5KSA8PCA0KSArIDE1XSA9IGxlbjsNCg0KICB2YXIgdyA9IEFycmF5KDgwKTsNCiAgdmFyIGEgPSAgMTczMjU4NDE5MzsNCiAgdmFyIGIgPSAtMjcxNzMzODc5Ow0KICB2YXIgYyA9IC0xNzMyNTg0MTk0Ow0KICB2YXIgZCA9ICAyNzE3MzM4Nzg7DQogIHZhciBlID0gLTEwMDk1ODk3NzY7DQoNCiAgZm9yKHZhciBpID0gMDsgaSA8IHgubGVuZ3RoOyBpICs9IDE2KQ0KICB7DQogICAgdmFyIG9sZGEgPSBhOw0KICAgIHZhciBvbGRiID0gYjsNCiAgICB2YXIgb2xkYyA9IGM7DQogICAgdmFyIG9sZGQgPSBkOw0KICAgIHZhciBvbGRlID0gZTsNCg0KICAgIGZvcih2YXIgaiA9IDA7IGogPCA4MDsgaisrKQ0KICAgIHsNCiAgICAgIGlmKGogPCAxNikgd1tqXSA9IHhbaSArIGpdOw0KICAgICAgZWxzZSB3W2pdID0gcm9sKHdbai0zXSBeIHdbai04XSBeIHdbai0xNF0gXiB3W2otMTZdLCAxKTsNCiAgICAgIHZhciB0ID0gc2FmZV9hZGQoc2FmZV9hZGQocm9sKGEsIDUpLCBzaGExX2Z0KGosIGIsIGMsIGQpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgc2FmZV9hZGQoc2FmZV9hZGQoZSwgd1tqXSksIHNoYTFfa3QoaikpKTsNCiAgICAgIGUgPSBkOw0KICAgICAgZCA9IGM7DQogICAgICBjID0gcm9sKGIsIDMwKTsNCiAgICAgIGIgPSBhOw0KICAgICAgYSA9IHQ7DQogICAgfQ0KDQogICAgYSA9IHNhZmVfYWRkKGEsIG9sZGEpOw0KICAgIGIgPSBzYWZlX2FkZChiLCBvbGRiKTsNCiAgICBjID0gc2FmZV9hZGQoYywgb2xkYyk7DQogICAgZCA9IHNhZmVfYWRkKGQsIG9sZGQpOw0KICAgIGUgPSBzYWZlX2FkZChlLCBvbGRlKTsNCiAgfQ0KICByZXR1cm4gQXJyYXkoYSwgYiwgYywgZCwgZSk7DQoNCn0NCg0KLyoNCiAqIFBlcmZvcm0gdGhlIGFwcHJvcHJpYXRlIHRyaXBsZXQgY29tYmluYXRpb24gZnVuY3Rpb24gZm9yIHRoZSBjdXJyZW50DQogKiBpdGVyYXRpb24NCiAqLw0KZnVuY3Rpb24gc2hhMV9mdCh0LCBiLCBjLCBkKQ0Kew0KICBpZih0IDwgMjApIHJldHVybiAoYiAmIGMpIHwgKCh+YikgJiBkKTsNCiAgaWYodCA8IDQwKSByZXR1cm4gYiBeIGMgXiBkOw0KICBpZih0IDwgNjApIHJldHVybiAoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZCk7DQogIHJldHVybiBiIF4gYyBeIGQ7DQp9DQoNCi8qDQogKiBEZXRlcm1pbmUgdGhlIGFwcHJvcHJpYXRlIGFkZGl0aXZlIGNvbnN0YW50IGZvciB0aGUgY3VycmVudCBpdGVyYXRpb24NCiAqLw0KZnVuY3Rpb24gc2hhMV9rdCh0KQ0Kew0KICByZXR1cm4gKHQgPCAyMCkgPyAgMTUxODUwMDI0OSA6ICh0IDwgNDApID8gIDE4NTk3NzUzOTMgOg0KICAgICAgICAgKHQgPCA2MCkgPyAtMTg5NDAwNzU4OCA6IC04OTk0OTc1MTQ7DQp9DQoNCi8qDQogKiBDYWxjdWxhdGUgdGhlIEhNQUMtU0hBMSBvZiBhIGtleSBhbmQgc29tZSBkYXRhDQogKi8NCmZ1bmN0aW9uIGNvcmVfaG1hY19zaGExKGtleSwgZGF0YSkNCnsNCiAgdmFyIGJrZXkgPSBzdHIyYmluYihrZXkpOw0KICBpZihia2V5Lmxlbmd0aCA+IDE2KSBia2V5ID0gY29yZV9zaGExKGJrZXksIGtleS5sZW5ndGggKiBjaHJzeik7DQoNCiAgdmFyIGlwYWQgPSBBcnJheSgxNiksIG9wYWQgPSBBcnJheSgxNik7DQogIGZvcih2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKQ0KICB7DQogICAgaXBhZFtpXSA9IGJrZXlbaV0gXiAweDM2MzYzNjM2Ow0KICAgIG9wYWRbaV0gPSBia2V5W2ldIF4gMHg1QzVDNUM1QzsNCiAgfQ0KDQogIHZhciBoYXNoID0gY29yZV9zaGExKGlwYWQuY29uY2F0KHN0cjJiaW5iKGRhdGEpKSwgNTEyICsgZGF0YS5sZW5ndGggKiBjaHJzeik7DQogIHJldHVybiBjb3JlX3NoYTEob3BhZC5jb25jYXQoaGFzaCksIDUxMiArIDE2MCk7DQp9DQoNCi8qDQogKiBBZGQgaW50ZWdlcnMsIHdyYXBwaW5nIGF0IDJeMzIuIFRoaXMgdXNlcyAxNi1iaXQgb3BlcmF0aW9ucyBpbnRlcm5hbGx5DQogKiB0byB3b3JrIGFyb3VuZCBidWdzIGluIHNvbWUgSlMgaW50ZXJwcmV0ZXJzLg0KICovDQpmdW5jdGlvbiBzYWZlX2FkZCh4LCB5KQ0Kew0KICB2YXIgbHN3ID0gKHggJiAweEZGRkYpICsgKHkgJiAweEZGRkYpOw0KICB2YXIgbXN3ID0gKHggPj4gMTYpICsgKHkgPj4gMTYpICsgKGxzdyA+PiAxNik7DQogIHJldHVybiAobXN3IDw8IDE2KSB8IChsc3cgJiAweEZGRkYpOw0KfQ0KDQovKg0KICogQml0d2lzZSByb3RhdGUgYSAzMi1iaXQgbnVtYmVyIHRvIHRoZSBsZWZ0Lg0KICovDQpmdW5jdGlvbiByb2wobnVtLCBjbnQpDQp7DQogIHJldHVybiAobnVtIDw8IGNudCkgfCAobnVtID4+PiAoMzIgLSBjbnQpKTsNCn0NCg0KLyoNCiAqIENvbnZlcnQgYW4gOC1iaXQgb3IgMTYtYml0IHN0cmluZyB0byBhbiBhcnJheSBvZiBiaWctZW5kaWFuIHdvcmRzDQogKiBJbiA4LWJpdCBmdW5jdGlvbiwgY2hhcmFjdGVycyA+MjU1IGhhdmUgdGhlaXIgaGktYnl0ZSBzaWxlbnRseSBpZ25vcmVkLg0KICovDQpmdW5jdGlvbiBzdHIyYmluYihzdHIpDQp7DQogIHZhciBiaW4gPSBBcnJheSgpOw0KICB2YXIgbWFzayA9ICgxIDw8IGNocnN6KSAtIDE7DQogIGZvcih2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoICogY2hyc3o7IGkgKz0gY2hyc3opDQogICAgYmluW2k+PjVdIHw9IChzdHIuY2hhckNvZGVBdChpIC8gY2hyc3opICYgbWFzaykgPDwgKDMyIC0gY2hyc3ogLSBpJTMyKTsNCiAgcmV0dXJuIGJpbjsNCn0NCg0KLyoNCiAqIENvbnZlcnQgYW4gYXJyYXkgb2YgYmlnLWVuZGlhbiB3b3JkcyB0byBhIHN0cmluZw0KICovDQpmdW5jdGlvbiBiaW5iMnN0cihiaW4pDQp7DQogIHZhciBzdHIgPSAiIjsNCiAgdmFyIG1hc2sgPSAoMSA8PCBjaHJzeikgLSAxOw0KICBmb3IodmFyIGkgPSAwOyBpIDwgYmluLmxlbmd0aCAqIDMyOyBpICs9IGNocnN6KQ0KICAgIHN0ciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChiaW5baT4+NV0gPj4+ICgzMiAtIGNocnN6IC0gaSUzMikpICYgbWFzayk7DQogIHJldHVybiBzdHI7DQp9DQoNCi8qDQogKiBDb252ZXJ0IGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMgdG8gYSBoZXggc3RyaW5nLg0KICovDQpmdW5jdGlvbiBiaW5iMmhleChiaW5hcnJheSkNCnsNCiAgdmFyIGhleF90YWIgPSBoZXhjYXNlID8gIjAxMjM0NTY3ODlBQkNERUYiIDogIjAxMjM0NTY3ODlhYmNkZWYiOw0KICB2YXIgc3RyID0gIiI7DQogIGZvcih2YXIgaSA9IDA7IGkgPCBiaW5hcnJheS5sZW5ndGggKiA0OyBpKyspDQogIHsNCiAgICBzdHIgKz0gaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoMyAtIGklNCkqOCs0KSkgJiAweEYpICsNCiAgICAgICAgICAgaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoMyAtIGklNCkqOCAgKSkgJiAweEYpOw0KICB9DQogIHJldHVybiBzdHI7DQp9DQoNCi8qDQogKiBDb252ZXJ0IGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMgdG8gYSBiYXNlLTY0IHN0cmluZw0KICovDQpmdW5jdGlvbiBiaW5iMmI2NChiaW5hcnJheSkNCnsNCiAgdmFyIHRhYiA9ICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvIjsNCiAgdmFyIHN0ciA9ICIiOw0KICBmb3IodmFyIGkgPSAwOyBpIDwgYmluYXJyYXkubGVuZ3RoICogNDsgaSArPSAzKQ0KICB7DQogICAgdmFyIHRyaXBsZXQgPSAoKChiaW5hcnJheVtpICAgPj4gMl0gPj4gOCAqICgzIC0gIGkgICAlNCkpICYgMHhGRikgPDwgMTYpDQogICAgICAgICAgICAgICAgfCAoKChiaW5hcnJheVtpKzEgPj4gMl0gPj4gOCAqICgzIC0gKGkrMSklNCkpICYgMHhGRikgPDwgOCApDQogICAgICAgICAgICAgICAgfCAgKChiaW5hcnJheVtpKzIgPj4gMl0gPj4gOCAqICgzIC0gKGkrMiklNCkpICYgMHhGRik7DQogICAgZm9yKHZhciBqID0gMDsgaiA8IDQ7IGorKykNCiAgICB7DQogICAgICBpZihpICogOCArIGogKiA2ID4gYmluYXJyYXkubGVuZ3RoICogMzIpIHN0ciArPSBiNjRwYWQ7DQogICAgICBlbHNlIHN0ciArPSB0YWIuY2hhckF0KCh0cmlwbGV0ID4+IDYqKDMtaikpICYgMHgzRik7DQogICAgfQ0KICB9DQogIHJldHVybiBzdHI7DQp9DQo=\"},\"js/utils.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"CnZhciBVdGlscyA9IHt9OwoKICAgIC8vIEZpbGUgc2l6ZSBwcmV0dHkgcHJpbnRpbmcKVXRpbHMuZm9ybWF0U2l6ZSA9IGZ1bmN0aW9uKHNpemUpIHsKICB2YXIganVtcCA9IDUxMjsKICBpZiAoc2l6ZSA8IGp1bXApIHJldHVybiBzaXplICsgIiBieXRlcyI7CiAgdmFyIHVuaXRzID0gWyJLQiIsICJNQiIsICJHQiIsICJUQiIsICJQQiIsICJFQiIsICJaQiIsICJZQiJdOwogIHZhciBpID0gMDsKICB3aGlsZSAoc2l6ZSA+PSBqdW1wICYmIGkgPCB1bml0cy5sZW5ndGgpIHsKICAgIGkgKz0gMTsKICAgIHNpemUgLz0gMTAyNAogIH0KICByZXR1cm4gc2l6ZS50b0ZpeGVkKDEpICsgJyAnICsgdW5pdHNbaSAtIDFdOwp9CgpVdGlscy5pc01vYmlsZSA9IGZ1bmN0aW9uKCkgewogIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkKICAgIC5tYXRjaCgvKGFuZHJvaWR8aXBob25lfGlwb2R8aXBhZCkvKSAhPT0gbnVsbDsKfTsKCgpmdW5jdGlvbiBsaW5rVXAoYm9keSwgcGVyc29uX3ByZWZpeCwgdGFnX3ByZWZpeCkgewoKICAvL2JvZHkgPSBNdXN0YWNoZS5lc2NhcGUoYm9keSk7CiAgcGVyc29uX3ByZWZpeCA9IHBlcnNvbl9wcmVmaXggfHwgIiMhL21lbnRpb25zLyI7CiAgdGFnX3ByZWZpeCA9IHRhZ19wcmVmaXggfHwgIiMhL3RhZ3MvIjsKCiAgdmFyIHRtcCA9IGJvZHkucmVwbGFjZSgvKChmdHB8aHR0cHxodHRwcyk6XC9cLyhcdys6ezAsMX1cdypAKT8oXFMrKSg6WzAtOV0rKT8oXC98XC8oW1x3IyE6Lj8rPSYlQCFcLVwvXSkpPykvZ2ksZnVuY3Rpb24oYSkgewogICAgcmV0dXJuICc8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iJythKyciPicrYSsnPC9hPic7CiAgfSk7CgogIGZ1bmN0aW9uIHRyYW5zZm9ybVRleHQoc3RyKSB7CiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1xAKFtcd1wtXSspL2csIGZ1bmN0aW9uKHVzZXIsbmFtZSkgewogICAgICByZXR1cm4gJzxhIGhyZWY9IicrcGVyc29uX3ByZWZpeCtlbmNvZGVVUklDb21wb25lbnQobmFtZSkrJyI+Jyt1c2VyKyc8L2E+JzsKICAgIH0pLnJlcGxhY2UoL1wjKFtcd1wtXC5dKykvZyxmdW5jdGlvbih3b3JkLHRhZykgewogICAgICByZXR1cm4gJzxhIGhyZWY9IicrdGFnX3ByZWZpeCtlbmNvZGVVUklDb21wb25lbnQodGFnKSsnIj4nK3dvcmQrJzwvYT4nOwogICAgfSk7CiAgfTsKCiAgZnVuY3Rpb24gcmVwbGFjZVRhZ3MoZG9tKSB7CiAgICB2YXIgaSwgdG1wOwogICAgZm9yIChpID0gMDsgaSA8IGRvbS5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHRtcCA9IChkb20uY2hpbGROb2Rlc1tpXS5ub2RlVHlwZSA9PT0gMyAmJgogICAgICAgICAgICAgJChkb20uY2hpbGROb2Rlc1tpXSkucGFyZW50cygiYSIpLmxlbmd0aCA9PT0gMCkKICAgICAgICA/ICQoIjxzcGFuPiIrdHJhbnNmb3JtVGV4dChkb20uY2hpbGROb2Rlc1tpXS50ZXh0Q29udGVudCkrIjwvc3Bhbj4iKVswXQogICAgICAgIDogcmVwbGFjZVRhZ3MoZG9tLmNoaWxkTm9kZXNbaV0pOwoKICAgICAgZG9tLnJlcGxhY2VDaGlsZCh0bXAsIGRvbS5jaGlsZE5vZGVzW2ldKTsKICAgIH0KICAgIHJldHVybiBkb207CiAgfTsKCiAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGRpdi5pbm5lckhUTUwgPSB0bXA7CiAgcmV0dXJuIHJlcGxhY2VUYWdzKGRpdikuaW5uZXJIVE1MOwoKICAvL3JldHVybiB0bXA7Cn07Cgp2YXIgZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciAgICB0b2tlbiA9IC9kezEsNH18bXsxLDR9fHl5KD86eXkpP3woW0hoTXNUdF0pXDE/fFtMbG9TWl18IlteIl0qInwnW14nXSonL2csCgkJdGltZXpvbmUgPSAvXGIoPzpbUE1DRUFdW1NEUF1UfCg/OlBhY2lmaWN8TW91bnRhaW58Q2VudHJhbHxFYXN0ZXJufEF0bGFudGljKSAoPzpTdGFuZGFyZHxEYXlsaWdodHxQcmV2YWlsaW5nKSBUaW1lfCg/OkdNVHxVVEMpKD86Wy0rXVxkezR9KT8pXGIvZywKCQl0aW1lem9uZUNsaXAgPSAvW14tK1xkQS1aXS9nLAoJCXBhZCA9IGZ1bmN0aW9uICh2YWwsIGxlbikgewoJCQl2YWwgPSBTdHJpbmcodmFsKTsKCQkJbGVuID0gbGVuIHx8IDI7CgkJCXdoaWxlICh2YWwubGVuZ3RoIDwgbGVuKSB2YWwgPSAiMCIgKyB2YWw7CgkJCXJldHVybiB2YWw7CgkJfTsKCgkvLyBSZWdleGVzIGFuZCBzdXBwb3J0aW5nIGZ1bmN0aW9ucyBhcmUgY2FjaGVkIHRocm91Z2ggY2xvc3VyZQoJcmV0dXJuIGZ1bmN0aW9uIChkYXRlLCBtYXNrLCB1dGMpIHsKCQl2YXIgZEYgPSBkYXRlRm9ybWF0OwoKCQkvLyBZb3UgY2FuJ3QgcHJvdmlkZSB1dGMgaWYgeW91IHNraXAgb3RoZXIgYXJncyAodXNlIHRoZSAiVVRDOiIgbWFzayBwcmVmaXgpCgkJaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZGF0ZSkgPT0gIltvYmplY3QgU3RyaW5nXSIgJiYgIS9cZC8udGVzdChkYXRlKSkgewoJCQltYXNrID0gZGF0ZTsKCQkJZGF0ZSA9IHVuZGVmaW5lZDsKCQl9CgoJCS8vIFBhc3NpbmcgZGF0ZSB0aHJvdWdoIERhdGUgYXBwbGllcyBEYXRlLnBhcnNlLCBpZiBuZWNlc3NhcnkKCQlkYXRlID0gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpIDogbmV3IERhdGU7CgkJaWYgKGlzTmFOKGRhdGUpKSB0aHJvdyBTeW50YXhFcnJvcigiaW52YWxpZCBkYXRlIik7CgoJCW1hc2sgPSBTdHJpbmcoZEYubWFza3NbbWFza10gfHwgbWFzayB8fCBkRi5tYXNrc1siZGVmYXVsdCJdKTsKCgkJLy8gQWxsb3cgc2V0dGluZyB0aGUgdXRjIGFyZ3VtZW50IHZpYSB0aGUgbWFzawoJCWlmIChtYXNrLnNsaWNlKDAsIDQpID09ICJVVEM6IikgewoJCQltYXNrID0gbWFzay5zbGljZSg0KTsKCQkJdXRjID0gdHJ1ZTsKCQl9CgoJCXZhcglfID0gdXRjID8gImdldFVUQyIgOiAiZ2V0IiwKCQkJZCA9IGRhdGVbXyArICJEYXRlIl0oKSwKCQkJRCA9IGRhdGVbXyArICJEYXkiXSgpLAoJCQltID0gZGF0ZVtfICsgIk1vbnRoIl0oKSwKCQkJeSA9IGRhdGVbXyArICJGdWxsWWVhciJdKCksCgkJCUggPSBkYXRlW18gKyAiSG91cnMiXSgpLAoJCQlNID0gZGF0ZVtfICsgIk1pbnV0ZXMiXSgpLAoJCQlzID0gZGF0ZVtfICsgIlNlY29uZHMiXSgpLAoJCQlMID0gZGF0ZVtfICsgIk1pbGxpc2Vjb25kcyJdKCksCgkJCW8gPSB1dGMgPyAwIDogZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpLAoJCQlmbGFncyA9IHsKCQkJCWQ6ICAgIGQsCgkJCQlkZDogICBwYWQoZCksCgkJCQlkZGQ6ICBkRi5pMThuLmRheU5hbWVzW0RdLAoJCQkJZGRkZDogZEYuaTE4bi5kYXlOYW1lc1tEICsgN10sCgkJCQltOiAgICBtICsgMSwKCQkJCW1tOiAgIHBhZChtICsgMSksCgkJCQltbW06ICBkRi5pMThuLm1vbnRoTmFtZXNbbV0sCgkJCQltbW1tOiBkRi5pMThuLm1vbnRoTmFtZXNbbSArIDEyXSwKCQkJCXl5OiAgIFN0cmluZyh5KS5zbGljZSgyKSwKCQkJCXl5eXk6IHksCgkJCQloOiAgICBIICUgMTIgfHwgMTIsCgkJCQloaDogICBwYWQoSCAlIDEyIHx8IDEyKSwKCQkJCUg6ICAgIEgsCgkJCQlISDogICBwYWQoSCksCgkJCQlNOiAgICBNLAoJCQkJTU06ICAgcGFkKE0pLAoJCQkJczogICAgcywKCQkJCXNzOiAgIHBhZChzKSwKCQkJCWw6ICAgIHBhZChMLCAzKSwKCQkJCUw6ICAgIHBhZChMID4gOTkgPyBNYXRoLnJvdW5kKEwgLyAxMCkgOiBMKSwKCQkJCXQ6ICAgIEggPCAxMiA/ICJhIiAgOiAicCIsCgkJCQl0dDogICBIIDwgMTIgPyAiYW0iIDogInBtIiwKCQkJCVQ6ICAgIEggPCAxMiA/ICJBIiAgOiAiUCIsCgkJCQlUVDogICBIIDwgMTIgPyAiQU0iIDogIlBNIiwKCQkJCVo6ICAgIHV0YyA/ICJVVEMiIDogKFN0cmluZyhkYXRlKS5tYXRjaCh0aW1lem9uZSkgfHwgWyIiXSkucG9wKCkucmVwbGFjZSh0aW1lem9uZUNsaXAsICIiKSwKCQkJCW86ICAgIChvID4gMCA/ICItIiA6ICIrIikgKyBwYWQoTWF0aC5mbG9vcihNYXRoLmFicyhvKSAvIDYwKSAqIDEwMCArIE1hdGguYWJzKG8pICUgNjAsIDQpLAoJCQkJUzogICAgWyJ0aCIsICJzdCIsICJuZCIsICJyZCJdW2QgJSAxMCA+IDMgPyAwIDogKGQgJSAxMDAgLSBkICUgMTAgIT0gMTApICogZCAlIDEwXQoJCQl9OwoKCQlyZXR1cm4gbWFzay5yZXBsYWNlKHRva2VuLCBmdW5jdGlvbiAoJDApIHsKCQkJcmV0dXJuICQwIGluIGZsYWdzID8gZmxhZ3NbJDBdIDogJDAuc2xpY2UoMSwgJDAubGVuZ3RoIC0gMSk7CgkJfSk7Cgl9Owp9KCk7CgovLyBTb21lIGNvbW1vbiBmb3JtYXQgc3RyaW5ncwpkYXRlRm9ybWF0Lm1hc2tzID0gewoJImRlZmF1bHQiOiAgICAgICJkZGQgbW1tIGRkIHl5eXkgSEg6TU06c3MiLAoJc2hvcnREYXRlOiAgICAgICJtL2QveXkiLAoJbWVkaXVtRGF0ZTogICAgICJtbW0gZCwgeXl5eSIsCglsb25nRGF0ZTogICAgICAgIm1tbW0gZCwgeXl5eSIsCglmdWxsRGF0ZTogICAgICAgImRkZGQsIG1tbW0gZCwgeXl5eSIsCglzaG9ydFRpbWU6ICAgICAgImg6TU0gVFQiLAoJbWVkaXVtVGltZTogICAgICJoOk1NOnNzIFRUIiwKCWxvbmdUaW1lOiAgICAgICAiaDpNTTpzcyBUVCBaIiwKCWlzb0RhdGU6ICAgICAgICAieXl5eS1tbS1kZCIsCglpc29UaW1lOiAgICAgICAgIkhIOk1NOnNzIiwKCWlzb0RhdGVUaW1lOiAgICAieXl5eS1tbS1kZCdUJ0hIOk1NOnNzIiwKCWlzb1V0Y0RhdGVUaW1lOiAiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJyIKfTsKCi8vIEludGVybmF0aW9uYWxpemF0aW9uIHN0cmluZ3MKZGF0ZUZvcm1hdC5pMThuID0gewoJZGF5TmFtZXM6IFsKCQkiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0IiwKCQkiU3VuZGF5IiwgIk1vbmRheSIsICJUdWVzZGF5IiwgIldlZG5lc2RheSIsICJUaHVyc2RheSIsICJGcmlkYXkiLCAiU2F0dXJkYXkiCgldLAoJbW9udGhOYW1lczogWwoJCSJKYW4iLCAiRmViIiwgIk1hciIsICJBcHIiLCAiTWF5IiwgIkp1biIsICJKdWwiLCAiQXVnIiwgIlNlcCIsICJPY3QiLCAiTm92IiwgIkRlYyIsCgkJIkphbnVhcnkiLCAiRmVicnVhcnkiLCAiTWFyY2giLCAiQXByaWwiLCAiTWF5IiwgIkp1bmUiLCAiSnVseSIsICJBdWd1c3QiLCAiU2VwdGVtYmVyIiwgIk9jdG9iZXIiLCAiTm92ZW1iZXIiLCAiRGVjZW1iZXIiCgldCn07CgovLyBGb3IgY29udmVuaWVuY2UuLi4KRGF0ZS5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24gKG1hc2ssIHV0YykgewoJcmV0dXJuIGRhdGVGb3JtYXQodGhpcywgbWFzaywgdXRjKTsKfTsKCi8vIFRha2VzIGFuIElTTyB0aW1lIGFuZCByZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGluZyBob3cKLy8gbG9uZyBhZ28gdGhlIGRhdGUgcmVwcmVzZW50cy4KZnVuY3Rpb24gcHJldHR5RGF0ZShkYXRlKXsKCXZhciBkaWZmID0gKCgobmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gZGF0ZS5nZXRUaW1lKCkpIC8gMTAwMCksCgkJZGF5X2RpZmYgPSBNYXRoLmZsb29yKGRpZmYgLyA4NjQwMCk7CgoJaWYgKCBpc05hTihkYXlfZGlmZikgfHwgZGF5X2RpZmYgPCAwICkKCQlyZXR1cm47CgogICAgcmV0dXJuIGRheV9kaWZmID09IDAgJiYgKAoJCWRpZmYgPCA2MCAmJiAianVzdCBub3ciIHx8CgkJCWRpZmYgPCAxMjAgJiYgIjEgbWluIGFnbyIgfHwKCQkJZGlmZiA8IDM2MDAgJiYgTWF0aC5mbG9vciggZGlmZiAvIDYwICkgKyAiIG1pbiBhZ28iIHx8CgkJCWRpZmYgPCA3MjAwICYmICIxIGhvdXIgYWdvIiB8fAoJCQlkaWZmIDwgODY0MDAgJiYgTWF0aC5mbG9vciggZGlmZiAvIDM2MDAgKSArICIgaG91cnMgYWdvIikgfHwKCQlkYXlfZGlmZiA9PSAxICYmICJZZXN0ZXJkYXkiIHx8CgkJZGF5X2RpZmYgPCA3ICYmIGRheV9kaWZmICsgIiBkYXlzIGFnbyIgfHwKCQlkYXlfZGlmZiA8IDMxICYmIE1hdGguY2VpbCggZGF5X2RpZmYgLyA3ICkgKyAiIHdlZWtzIGFnbyIgfHwKICAgIGRheV9kaWZmIDwgMzY1ICYmIE1hdGguY2VpbCggZGF5X2RpZmYgLyAzMSkgKyAiIG1vbnRocyBhZ28iOwp9Owo=\"},\"img/favicon.png\":{\"content_type\":\"image/png\",\"revpos\":58,\"data\":\"AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQHXAB4e2gDBv/kANS3sALe1+AAYEuQAysn4AMrI+gD///8A7Oz8AIWE7ACkofYADQreAHVw8gCbmu8AExPZACki6wAXEeQAAADWAK2q9wAJB9wAUVHjAP7+/gB6eukAwsL1ABkT5QACAtcANi7sACsr3QAiGusAGBPkAAYE2QAWEOMA9/f9ANTU+ADxoeExMCCQkTExMTExMbHhoaHhMBDwkXFSAbExMTGx4aGh4eHgkJDB4eHh4eHh4eGhoeDRkJCQkWExMYCQkLHhoaBRAJCQkJCQojCSQfGx4aHQkJCQkJFAkJCQMeHh4GHQAHCQkJCB4eBA4eHh4eEgAAIQkJCQkcHhEeHh4eHhIAAAAJCQAiCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAMh/AAD//wAA//8AAP//AAA=\"},\"jquery-1.6.min.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"data\":\"\"}}},\"couchapp\":{\"manifest\":[\"mobilefuton.json\",\"_id\",\"README.md\"],\"signatures\":{\"index.html\":\"a433e4a1b135d21bec63a847eaf7bd54\",\"css/main.css\":\"311e918b7c4d7460198826aea577aca2\",\"img/icon72.png\":\"4a71769ab5da355d6b6ca83a576e8b9\",\"img/favicon.png\":\"78d6a3654153112cb7a98bb36529f28\",\"js/utils.js\":\"bd8f1baa5897786c818e77d6231feed3\",\"js/sha1.js\":\"281a4ec66a809c4d3ae6fc8bb31f536\",\"js/router.js\":\"79bcc23f8851d52c618e9b448581ce0\",\"js/renderer.js\":\"4c9dbbbe2390583ebf1284ad4e6995\",\"js/mustache.js\":\"717514442c157cd97812ce1bf9199b3e\",\"js/modernizr-1.7.min.js\":\"52b8fd529e8142bdb6c4f9e7f55aaec0\",\"js/mobile.futon.js\":\"7854881da0d2fbfe954377d193cc59d3\",\"js/jquery.couch.js\":\"3e893f469d8327277676da1c898e20f1\",\"js/jquery-1.6.min.js\":\"3c379d7fafbaafecb78c98dd863da\",\"js/google.fastbutton.js\":\"9292443648cfc3b8388fc1272ef1a6c\"},\"objects\":{}},\"_attachments\":{\"js/jquery-1.6.min.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":147,\"length\":90518,\"stub\":true},\"css/main.css\":{\"content_type\":\"text/css\",\"revpos\":147,\"length\":9965,\"stub\":true},\"index.html\":{\"content_type\":\"text/html\",\"revpos\":147,\"length\":13370,\"stub\":true},\"js/renderer.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":140,\"length\":2926,\"stub\":true},\"js/router.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":139,\"length\":4444,\"stub\":true},\"img/icon72.png\":{\"content_type\":\"image/png\",\"revpos\":127,\"length\":4583,\"stub\":true},\"js/mobile.futon.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":124,\"length\":22327,\"stub\":true},\"js/google.fastbutton.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":89,\"length\":2226,\"stub\":true},\"js/jquery.couch.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"length\":41141,\"stub\":true},\"js/modernizr-1.7.min.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"length\":9021,\"stub\":true},\"js/mustache.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"length\":9041,\"stub\":true},\"js/sha1.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"length\":5753,\"stub\":true},\"js/utils.js\":{\"content_type\":\"application/x-javascript\",\"revpos\":58,\"length\":5918,\"stub\":true},\"img/favicon.png\":{\"content_type\":\"image/png\",\"revpos\":58,\"length\":1406,\"stub\":true}}}\n","couchapp":{"manifest":["mobilefuton.txt","mobilefuton.json","_id","README.md"],"signatures":{"index.html":"a433e4a1b135d21bec63a847eaf7bd54","css/main.css":"b6c7ec9f165df4f55ce72de98bd6c31","img/icon72.png":"4a71769ab5da355d6b6ca83a576e8b9","img/favicon.png":"78d6a3654153112cb7a98bb36529f28","js/utils.js":"bd8f1baa5897786c818e77d6231feed3","js/sha1.js":"281a4ec66a809c4d3ae6fc8bb31f536","js/router.js":"79bcc23f8851d52c618e9b448581ce0","js/renderer.js":"4c9dbbbe2390583ebf1284ad4e6995","js/mustache.js":"717514442c157cd97812ce1bf9199b3e","js/modernizr-1.7.min.js":"52b8fd529e8142bdb6c4f9e7f55aaec0","js/mobile.futon.js":"6911b643684faf5a37d06ef7d3f116da","js/jquery.couch.js":"3e893f469d8327277676da1c898e20f1","js/jquery-1.6.min.js":"3c379d7fafbaafecb78c98dd863da","js/google.fastbutton.js":"9292443648cfc3b8388fc1272ef1a6c"},"objects":{}},"_attachments":{"js/mobile.futon.js":{"content_type":"application/x-javascript","revpos":150,"data":""},"css/main.css":{"content_type":"text/css","revpos":148,"data":""},"js/jquery-1.6.min.js":{"content_type":"application/x-javascript","revpos":147,"data":""},"index.html":{"content_type":"text/html","revpos":147,"data":""},"js/renderer.js":{"content_type":"application/x-javascript","revpos":140,"data":"dmFyIFJlbmRlcmVyID0gKGZ1bmN0aW9uKCkgewoKICB2YXIgcGFuZVdpZHRoID0gMDsKICB2YXIgY3VycmVudE9mZnNldCA9IDA7CiAgdmFyIGN1cnJlbnRfdHBsID0gbnVsbDsKICB2YXIgbGFzdFBhbmUgPSBudWxsOwoKICAkKHdpbmRvdykuYmluZCgicmVzaXplIiwgZnVuY3Rpb24gKCkgewogICAgcGFuZVdpZHRoID0gJCgiYm9keSIpLndpZHRoKCk7CiAgfSk7CiAgJCh3aW5kb3cpLnJlc2l6ZSgpOwoKCiAgZnVuY3Rpb24gdHJhbnNmb3JtWShkb20sIHgpIHsKICAgIGlmIChNb2Rlcm5penIuY3NzdHJhbnNmb3JtczNkKSB7CiAgICAgIGRvbS5jc3MoIi1tb3otdHJhbnNmb3JtIiwgInRyYW5zbGF0ZTNkKDAsICIgKyB4ICsgInB4LCAwKSIpCiAgICAgICAgLmNzcygiLXdlYmtpdC10cmFuc2Zvcm0iLCAidHJhbnNsYXRlM2QoMCwgIiArIHggKyAicHgsIDApIik7CiAgICB9IGVsc2UgewogICAgICBkb20uY3NzKCItbW96LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwgIiArIHggKyAicHgpIikKICAgICAgICAuY3NzKCItd2Via2l0LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUoMCwgIiArIHggKyAicHgpIik7CiAgICB9CiAgfQoKICBmdW5jdGlvbiB0cmFuc2Zvcm1YKGRvbSwgeCkgewogICAgaWYgKE1vZGVybml6ci5jc3N0cmFuc2Zvcm1zM2QpIHsKICAgICAgZG9tLmNzcygiLW1vei10cmFuc2Zvcm0iLCAidHJhbnNsYXRlM2QoIiArIHggKyAicHgsIDAsIDApIikKICAgICAgICAuY3NzKCItd2Via2l0LXRyYW5zZm9ybSIsICJ0cmFuc2xhdGUzZCgiICsgeCArICJweCwgMCwgMCkiKTsKICAgIH0gZWxzZSB7CiAgICAgIGRvbS5jc3MoIi1tb3otdHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgeCArICJweCwgMCkiKQogICAgICAgIC5jc3MoIi13ZWJraXQtdHJhbnNmb3JtIiwgInRyYW5zbGF0ZSgiICsgeCArICJweCwgMCkiKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHJlbmRlcih0cGwsIGRhdGEsIG9wdHMsIGNhbGxiYWNrKSB7CgogICAgd2luZG93LnNjcm9sbFRvKDAsIDApOwoKICAgIG9wdHMgPSBvcHRzIHx8IHt9OwogICAgZGF0YSA9IGRhdGEgfHwge307CgogICAgdmFyIHJlbmRlcmVkID0gTXVzdGFjaGUudG9faHRtbCgkKCIjIiArIHRwbCkuaHRtbCgpLCBkYXRhKSwKICAgICRwYW5lID0gJCgiPGRpdiBjbGFzcz0ncGFuZSc+PGRpdiBjbGFzcz0nY29udGVudCc+IiArIHJlbmRlcmVkICsgIjwvZGl2PjwvZGl2PiIpOwoKICAgIG1ha2VMaW5rc0Zhc3QoJHBhbmUpOwoKICAgIGlmIChjYWxsYmFjaykgewogICAgICBjYWxsYmFjaygkcGFuZSk7CiAgICB9CgogICAgaWYgKG9wdHMubm90cmFuc2l0aW9uIHx8IChvcHRzLnJvdXRlciAmJiBvcHRzLnJvdXRlci5yZWZyZXNoKSkgewoKICAgICAgJHBhbmUuY3NzKHsibGVmdCI6Y3VycmVudE9mZnNldH0pLmFwcGVuZFRvKCQoIiNjb250ZW50IikpOwogICAgICBpZiAobGFzdFBhbmUpIHsKICAgICAgICBsYXN0UGFuZS5yZW1vdmUoKTsKICAgICAgfQogICAgICBsYXN0UGFuZSA9ICRwYW5lOwogICAgLy8gfSBlbHNlIGlmICh0cmFuc2l0aW9uID09PSAnc2xpZGVVcCcpIHsKCiAgICAvLyAgICQoIiNjb250ZW50Iikub25lKCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQiLCBmdW5jdGlvbigpIHsKICAgIC8vICAgICBpZiAobGFzdFBhbmUpIHsKICAgIC8vICAgICAgIGxhc3RQYW5lLmhpZGUoKTsKICAgIC8vICAgICB9CiAgICAvLyAgIH0pOwoKICAgIC8vICAgc2xpZGVQYW5lID0gJHBhbmUuYWRkQ2xhc3MoInNsaWRlcGFuZSIpCiAgICAvLyAgICAgLmNzcyh7bGVmdDpjdXJyZW50T2Zmc2V0LCB0b3A6LSQod2luZG93KS5oZWlnaHQoKSwgJ3otaW5kZXgnOiAzfSkKICAgIC8vICAgICAuYXBwZW5kVG8oIiNjb250ZW50Iik7CiAgICAvLyAgIHRyYW5zZm9ybVkoc2xpZGVQYW5lLCAkKHdpbmRvdykuaGVpZ2h0KCkpOwoKICAgIC8vIH0gZWxzZSBpZiAoc2xpZGVQYW5lKSB7CgogICAgLy8gICBpZiAobGFzdFBhbmUpIHsKICAgIC8vICAgICBsYXN0UGFuZS5yZW1vdmUoKTsKICAgIC8vICAgICBsYXN0UGFuZSA9IG51bGw7CiAgICAvLyAgIH0KCiAgICAvLyAgICRwYW5lLmNzcyh7ImxlZnQiOmN1cnJlbnRPZmZzZXR9KS5hcHBlbmRUbygkKCIjY29udGVudCIpKTsKICAgIC8vICAgdHJhbnNmb3JtWShzbGlkZVBhbmUsIDApOwogICAgLy8gICBsYXN0UGFuZSA9ICRwYW5lOwoKICAgIC8vICAgc2xpZGVQYW5lLm9uZSgid2Via2l0VHJhbnNpdGlvbkVuZCB0cmFuc2l0aW9uZW5kIiwgZnVuY3Rpb24oKSB7CiAgICAvLyAgICAgc2xpZGVQYW5lLnJlbW92ZSgpOwogICAgLy8gICAgIHNsaWRlUGFuZSA9IG51bGw7CiAgICAvLyAgIH0pOwoKICAgIH0gZWxzZSB7CgogICAgICBpZiAoY3VycmVudF90cGwpIHsKICAgICAgICB2YXIgZ29CYWNrID0gKG9wdHMucm91dGVyICYmIChvcHRzLnJvdXRlci5iYWNrIHx8IG9wdHMucm91dGVyLmhvbWUpKTsKICAgICAgICBjdXJyZW50T2Zmc2V0ICs9ICFnb0JhY2sgPyBwYW5lV2lkdGggOiAtcGFuZVdpZHRoOwogICAgICB9CgogICAgICB2YXIgdG1wID0gbGFzdFBhbmU7CiAgICAgICQoIiNjb250ZW50Iikub25lKCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmQiLCBmdW5jdGlvbigpIHsKICAgICAgICBpZiAodG1wKSB7CiAgICAgICAgICB0bXAucmVtb3ZlKCk7CiAgICAgICAgICB0bXAgPSBudWxsOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICB0cmFuc2Zvcm1YKCRwYW5lLCBjdXJyZW50T2Zmc2V0KTsKICAgICAgJHBhbmUuYXBwZW5kVG8oJCgiI2NvbnRlbnQiKSk7CgogICAgICB0cmFuc2Zvcm1YKCQoIiNjb250ZW50IiksIC1jdXJyZW50T2Zmc2V0KTsKICAgICAgbGFzdFBhbmUgPSAkcGFuZTsKICAgIH0KICAgIGN1cnJlbnRfdHBsID0gdHBsOwogIH0KCiAgcmV0dXJuIHsKICAgIHJlbmRlcjogcmVuZGVyCiAgfTsKfSk7Cg=="},"js/router.js":{"content_type":"application/x-javascript","revpos":139,"data":"dmFyIFJvdXRlciA9IChmdW5jdGlvbigpIHsKCiAgdmFyIFBBVEhfUkVQTEFDRVIgPSAiKFteXC9dKykiCiAgICAsIFBBVEhfTUFUQ0hFUiA9ICgvOihbXHdcZF0rKS9nKQogICAgLCBXSUxEX01BVENIRVIgPSAoL1wqKFtcd1xkXSspL2cpCiAgICAsIFdJTERfUkVQTEFDRVIgPSAiKC4qPykiCiAgICAsIGxhc3RQYWdlCiAgICAsIGhpc3RvcnkgPSBbXQogICAgLCBoYXNocGFyYW1zID0ge30KICAgICwgcGFyYW1zID0ge30KICAgICwgcm91dGVzID0ge0dFVDogW10sIFBPU1Q6IFtdfTsKCiAgJC5lYWNoKGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdCgiJiIpLCBmdW5jdGlvbihpLCBwYXJhbSkgewogICAgdmFyIHRtcCA9IHBhcmFtLnNwbGl0KCI9Iik7CiAgICBwYXJhbXNbdG1wWzBdXSA9IHRtcFsxXTsKICB9KTsKCiAgLy8gTmVlZHMgbmFtZXNwYWNlZCBhbmQgZGVjb3VwbGVkIGFuZCBzdHVmZgogIGZ1bmN0aW9uIGluaXQocGFyZW50KSB7CiAgICAkKHBhcmVudCkuYmluZCgiaGFzaGNoYW5nZSIsIHVybENoYW5nZWQpLnRyaWdnZXIoImhhc2hjaGFuZ2UiKTsKICAgICQoZG9jdW1lbnQpLmJpbmQoInN1Ym1pdCIsIGZvcm1TdWJtaXR0ZWQpOwogIH0KCiAgZnVuY3Rpb24gYmFjaygpIHsKICAgIGhpc3RvcnkucG9wKCk7IC8vIGN1cnJlbnQgdXJsCiAgICBpZiAoaGlzdG9yeS5sZW5ndGggPiAwKSB7CiAgICAgIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYgPSAiIyIgKyBoaXN0b3J5LnBvcCgpOwogICAgfSBlbHNlIHsKICAgICAgZG9jdW1lbnQubG9jYXRpb24uaHJlZiA9ICIjIjsKICAgIH0KICB9CgogIGZ1bmN0aW9uIGdldChwYXRoLCBjYikgewogICAgdmFyIG9iaiA9IHtwYXRoOnBhdGgsIGxvYWQ6Y2J9OwogICAgcm91dGVzLkdFVC5wdXNoKG9iaik7CiAgICByZXR1cm4gewogICAgICB1bmxvYWQ6IGZ1bmN0aW9uKHVubG9hZENhbGxiYWNrKSB7CiAgICAgICAgb2JqLnVubG9hZCA9IHVubG9hZENhbGxiYWNrOwogICAgICB9LAogICAgICBvcHRzOiBmdW5jdGlvbihvcHRzKSB7CiAgICAgICAgb2JqLm9wdHMgPSBvcHRzOwogICAgICB9CiAgICB9OwogIH0KCiAgZnVuY3Rpb24gcG9zdChwYXRoLCBjYikgewogICAgdmFyIG9iaiA9IHtwYXRoOnBhdGgsIGxvYWQ6Y2J9OwogICAgcm91dGVzLlBPU1QucHVzaChvYmopOwogICAgcmV0dXJuIHsKICAgICAgdW5sb2FkOiBmdW5jdGlvbih1bmxvYWRDYWxsYmFjaykgewogICAgICAgIG9iai51bmxvYWQgPSB1bmxvYWRDYWxsYmFjazsKICAgICAgfSwKICAgICAgb3B0czogZnVuY3Rpb24ob3B0cykgewogICAgICAgIG9iai5vcHRzID0gb3B0czsKICAgICAgfQogICAgfTsKICB9CgogIGZ1bmN0aW9uIHRvUmVnZXgocGF0aCkgewogICAgaWYgKHBhdGguY29uc3RydWN0b3IgPT0gU3RyaW5nKSB7CiAgICAgIHJldHVybiBuZXcgUmVnRXhwKCJeIiArIHBhdGgucmVwbGFjZShQQVRIX01BVENIRVIsIFBBVEhfUkVQTEFDRVIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoV0lMRF9NQVRDSEVSLCBXSUxEX1JFUExBQ0VSKSArIiQiKTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBwYXRoOwogICAgfQogIH0KCiAgZnVuY3Rpb24gcmVmcmVzaCgpIHsKICAgIHVybENoYW5nZWQobnVsbCwgeyJyb3V0ZXIiOiB7InJlZnJlc2giOiB0cnVlfX0pOwogIH0KCiAgZnVuY3Rpb24gdXJsQ2hhbmdlZChlLCBvcHRzKSB7CiAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgIGhpc3RvcnkucHVzaCgiIyIgKyAoZG9jdW1lbnQubG9jYXRpb24uaHJlZi5zcGxpdCgiIyIpWzFdIHx8ICIiKSk7CiAgICB0cmlnZ2VyKCJHRVQiLCAiIyIgKyAoZG9jdW1lbnQubG9jYXRpb24uaHJlZi5zcGxpdCgiIyIpWzFdIHx8ICIiKSwgbnVsbCwgbnVsbCwgb3B0cyk7CiAgfQoKICBmdW5jdGlvbiBmb3J3YXJkKHVybCkgewogICAgdHJpZ2dlcigiR0VUIiwgdXJsKTsKICB9CgogIGZ1bmN0aW9uIGZvcm1TdWJtaXR0ZWQoZSkgewoKICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIHZhciBhY3Rpb24gPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoImFjdGlvbiIpOwoKICAgIGlmIChhY3Rpb25bMF0gPT09ICIjIikgewogICAgICB0cmlnZ2VyKCJQT1NUIiwgYWN0aW9uLCBlLCBzZXJpYWxpemUoZS50YXJnZXQpKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHRyaWdnZXIodmVyYiwgdXJsLCBjdHgsIGRhdGEsIG9wdHMpIHsKCiAgICBvcHRzID0gb3B0cyB8fCB7fTsKICAgIGhhc2hwYXJhbXMgPSBbXTsKCiAgICAkLmVhY2goKHVybC5zcGxpdCgiPyIpWzFdIHx8ICIiKS5zcGxpdCgiJiIpLCBmdW5jdGlvbihpLCBwYXJhbSkgewogICAgICB2YXIgdG1wID0gcGFyYW0uc3BsaXQoIj0iKTsKICAgICAgaGFzaHBhcmFtc1t0bXBbMF1dID0gdG1wWzFdOwogICAgfSk7CgogICAgdmFyIG1hdGNoID0gbWF0Y2hQYXRoKHZlcmIsIHVybC5zcGxpdCgiPyIpWzBdKTsKCiAgICBpZiAobWF0Y2gpIHsKCiAgICAgIHZhciBhcmdzID0gbWF0Y2gubWF0Y2guc2xpY2UoMSk7CgogICAgICBpZiAodmVyYiA9PT0gIlBPU1QiKSB7CiAgICAgICAgYXJncy51bnNoaWZ0KGRhdGEpOwogICAgICAgIGFyZ3MudW5zaGlmdChjdHgpOwogICAgICB9CgogICAgICBpZiAobGFzdFBhZ2UgJiYgbGFzdFBhZ2UudW5sb2FkICYmIHZlcmIgPT09ICJHRVQiKSB7CiAgICAgICAgbGFzdFBhZ2UudW5sb2FkLmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICB9CgogICAgICB2YXIgb3BxID0gJC5leHRlbmQoe30sIG9wdHMsIG1hdGNoLmRldGFpbHMub3B0cyk7CiAgICAgIHZhciBpc0JhY2sgPSAoaGlzdG9yeS5sZW5ndGggPiAyICYmIHVybCA9PT0gaGlzdG9yeVtoaXN0b3J5Lmxlbmd0aC0zXSk7CgogICAgICBpZiAoaXNCYWNrKSB7CiAgICAgICAgb3BxLnJvdXRlciA9IG9wcS5yb3V0ZXIgfHwge307CiAgICAgICAgb3BxLnJvdXRlci5iYWNrID0gdHJ1ZTsKICAgICAgICBoaXN0b3J5Lmxlbmd0aCAtPSAyOwogICAgICB9CgogICAgICBpZiAobWF0Y2gubWF0Y2hbMF0gPT09ICIjLyIpIHsKICAgICAgICBvcHEucm91dGVyID0gb3BxLnJvdXRlciB8fCB7fTsKICAgICAgICBvcHEucm91dGVyLmhvbWUgPSB0cnVlOwogICAgICB9CgogICAgICBhcmdzLnVuc2hpZnQob3BxKTsKICAgICAgbWF0Y2guZGV0YWlscy5sb2FkLmFwcGx5KHRoaXMsIGFyZ3MpOwogICAgICBpZiAodmVyYiA9PT0gIkdFVCIpIHsKICAgICAgICBsYXN0UGFnZSA9IG1hdGNoLmRldGFpbHM7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIG1hdGNoZXNDdXJyZW50KG5lZWRsZSkgewogICAgcmV0dXJuIHdpbmRvdy5sb2NhdGlvbi5oYXNoLnNsaWNlKDEpLm1hdGNoKHRvUmVnZXgobmVlZGxlKSk7CiAgfQoKICBmdW5jdGlvbiBtYXRjaFBhdGgodmVyYiwgcGF0aCkgewogICAgdmFyIGksIHRtcCwgYXJyID0gcm91dGVzW3ZlcmJdOwogICAgZm9yIChpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICB0bXAgPSBwYXRoLm1hdGNoKHRvUmVnZXgoYXJyW2ldLnBhdGgpKTsKICAgICAgaWYgKHRtcCkgewogICAgICAgIHJldHVybiB7Im1hdGNoIjp0bXAsICJkZXRhaWxzIjphcnJbaV19OwogICAgICB9CiAgICB9CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICBmdW5jdGlvbiBzZXJpYWxpemUob2JqKSB7CiAgICB2YXIgbyA9IHt9OwogICAgdmFyIGEgPSAkKG9iaikuc2VyaWFsaXplQXJyYXkoKTsKICAgICQuZWFjaChhLCBmdW5jdGlvbigpIHsKICAgICAgaWYgKG9bdGhpcy5uYW1lXSkgewogICAgICAgIGlmICghb1t0aGlzLm5hbWVdLnB1c2gpIHsKICAgICAgICAgIG9bdGhpcy5uYW1lXSA9IFtvW3RoaXMubmFtZV1dOwogICAgICAgIH0KICAgICAgICBvW3RoaXMubmFtZV0ucHVzaCh0aGlzLnZhbHVlIHx8ICcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBvW3RoaXMubmFtZV0gPSB0aGlzLnZhbHVlIHx8ICcnOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBvOwogIH0KCiAgZnVuY3Rpb24gcHJldmlvdXMoeCkgewogICAgeCA9IHggfHwgMDsKICAgIHJldHVybiBoaXN0b3J5Lmxlbmd0aCA+ICgxICsgeCkgPyBoaXN0b3J5W2hpc3RvcnkubGVuZ3RoIC0gKDIgKyB4KV06IGZhbHNlOwogIH0KCiAgZnVuY3Rpb24gaGFzaHBhcmFtKGtleSkgewogICAgcmV0dXJuIGhhc2hwYXJhbXNba2V5XTsKICB9CgogIHJldHVybiB7IHByZXZpb3VzIDogcHJldmlvdXMKICAgICAgICAgLCByZWZyZXNoIDogcmVmcmVzaAogICAgICAgICAsIGZvcndhcmQgOiBmb3J3YXJkCiAgICAgICAgICwgYmFjayAgICA6IGJhY2sKICAgICAgICAgLCBnZXQgICAgIDogZ2V0CiAgICAgICAgICwgcG9zdCAgICA6IHBvc3QKICAgICAgICAgLCBpbml0ICAgIDogaW5pdAogICAgICAgICAsIG1hdGNoZXNDdXJyZW50IDogbWF0Y2hlc0N1cnJlbnQKICAgICAgICAgLCBoYXNocGFyYW0gOiBoYXNocGFyYW0KICAgICAgICAgLCBwYXJhbXMgOiBwYXJhbXMgfTsKCn0pOw=="},"img/icon72.png":{"content_type":"image/png","revpos":127,"data":"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"},"js/google.fastbutton.js":{"content_type":"application/x-javascript","revpos":89,"data":"dmFyIGdvb2dsZSA9IHt9Owpnb29nbGUudWkgPSB7fTsKCmdvb2dsZS51aS5GYXN0QnV0dG9uID0gZnVuY3Rpb24oZWxlbWVudCwgaGFuZGxlcikgewogIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7CiAgdGhpcy5oYW5kbGVyID0gaGFuZGxlcjsKCiAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcywgZmFsc2UpOwogIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLCBmYWxzZSk7Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUuaGFuZGxlRXZlbnQgPSBmdW5jdGlvbihldmVudCkgewogIHN3aXRjaCAoZXZlbnQudHlwZSkgewogICAgY2FzZSAndG91Y2hzdGFydCc6IHRoaXMub25Ub3VjaFN0YXJ0KGV2ZW50KTsgYnJlYWs7CiAgICBjYXNlICd0b3VjaG1vdmUnOiB0aGlzLm9uVG91Y2hNb3ZlKGV2ZW50KTsgYnJlYWs7CiAgICBjYXNlICd0b3VjaGVuZCc6IHRoaXMub25DbGljayhldmVudCk7IGJyZWFrOwogICAgY2FzZSAnY2xpY2snOiB0aGlzLm9uQ2xpY2soZXZlbnQpOyBicmVhazsKICB9Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUub25Ub3VjaFN0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpIHsKICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCiAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcywgZmFsc2UpOwogIGRvY3VtZW50LmJvZHkuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgdGhpcywgZmFsc2UpOwoKICB0aGlzLnN0YXJ0WCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WDsKICB0aGlzLnN0YXJ0WSA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WTsKfTsKCmdvb2dsZS51aS5GYXN0QnV0dG9uLnByb3RvdHlwZS5vblRvdWNoTW92ZSA9IGZ1bmN0aW9uKGV2ZW50KSB7CiAgaWYgKE1hdGguYWJzKGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WCAtIHRoaXMuc3RhcnRYKSA+IDEwIHx8CiAgICAgIE1hdGguYWJzKGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WSAtIHRoaXMuc3RhcnRZKSA+IDEwKSB7CiAgICB0aGlzLnJlc2V0KCk7CiAgfQp9OwoKZ29vZ2xlLnVpLkZhc3RCdXR0b24ucHJvdG90eXBlLm9uQ2xpY2sgPSBmdW5jdGlvbihldmVudCkgewogIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogIHRoaXMucmVzZXQoKTsKICB0aGlzLmhhbmRsZXIoZXZlbnQpOwoKICBpZiAoZXZlbnQudHlwZSA9PSAndG91Y2hlbmQnKSB7CiAgICBnb29nbGUuY2xpY2tidXN0ZXIucHJldmVudEdob3N0Q2xpY2sodGhpcy5zdGFydFgsIHRoaXMuc3RhcnRZKTsKICB9Cn07Cgpnb29nbGUudWkuRmFzdEJ1dHRvbi5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbigpIHsKICB0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLCBmYWxzZSk7CiAgZG9jdW1lbnQuYm9keS5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCB0aGlzLCBmYWxzZSk7Cn07Cgpnb29nbGUuY2xpY2tidXN0ZXIgPSB7fTsKCmdvb2dsZS5jbGlja2J1c3Rlci5wcmV2ZW50R2hvc3RDbGljayA9IGZ1bmN0aW9uKHgsIHkpIHsKICBnb29nbGUuY2xpY2tidXN0ZXIuY29vcmRpbmF0ZXMucHVzaCh4LCB5KTsKICB3aW5kb3cuc2V0VGltZW91dChnb29nbGUuY2xpY2tidXN0ZXIucG9wLCAyNTAwKTsKfTsKCmdvb2dsZS5jbGlja2J1c3Rlci5wb3AgPSBmdW5jdGlvbigpIHsKICBnb29nbGUuY2xpY2tidXN0ZXIuY29vcmRpbmF0ZXMuc3BsaWNlKDAsIDIpOwp9OwoKZ29vZ2xlLmNsaWNrYnVzdGVyLm9uQ2xpY2sgPSBmdW5jdGlvbihldmVudCkgewogIGZvciAodmFyIGkgPSAwOyBpIDwgZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzLmxlbmd0aDsgaSArPSAyKSB7CiAgICB2YXIgeCA9IGdvb2dsZS5jbGlja2J1c3Rlci5jb29yZGluYXRlc1tpXTsKICAgIHZhciB5ID0gZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzW2kgKyAxXTsKICAgIGlmIChNYXRoLmFicyhldmVudC5jbGllbnRYIC0geCkgPCAyNSAmJiBNYXRoLmFicyhldmVudC5jbGllbnRZIC0geSkgPCAyNSkgewogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIH0KICB9Cn07Cgpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdvb2dsZS5jbGlja2J1c3Rlci5vbkNsaWNrLCB0cnVlKTsKZ29vZ2xlLmNsaWNrYnVzdGVyLmNvb3JkaW5hdGVzID0gW107"},"js/jquery.couch.js":{"content_type":"application/x-javascript","revpos":58,"data":""},"js/modernizr-1.7.min.js":{"content_type":"application/x-javascript","revpos":58,"data":""},"js/mustache.js":{"content_type":"application/x-javascript","revpos":58,"data":""},"js/sha1.js":{"content_type":"application/x-javascript","revpos":58,"data":"LyoNCiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMSwgYXMgZGVmaW5lZA0KICogaW4gRklQUyBQVUIgMTgwLTENCiAqIFZlcnNpb24gMi4xYSBDb3B5cmlnaHQgUGF1bCBKb2huc3RvbiAyMDAwIC0gMjAwMi4NCiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXQNCiAqIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBCU0QgTGljZW5zZQ0KICogU2VlIGh0dHA6Ly9wYWpob21lLm9yZy51ay9jcnlwdC9tZDUgZm9yIGRldGFpbHMuDQogKi8NCg0KLyoNCiAqIENvbmZpZ3VyYWJsZSB2YXJpYWJsZXMuIFlvdSBtYXkgbmVlZCB0byB0d2VhayB0aGVzZSB0byBiZSBjb21wYXRpYmxlIHdpdGgNCiAqIHRoZSBzZXJ2ZXItc2lkZSwgYnV0IHRoZSBkZWZhdWx0cyB3b3JrIGluIG1vc3QgY2FzZXMuDQogKi8NCnZhciBoZXhjYXNlID0gMDsgIC8qIGhleCBvdXRwdXQgZm9ybWF0LiAwIC0gbG93ZXJjYXNlOyAxIC0gdXBwZXJjYXNlICAgICAgICAqLw0KdmFyIGI2NHBhZCAgPSAiPSI7IC8qIGJhc2UtNjQgcGFkIGNoYXJhY3Rlci4gIj0iIGZvciBzdHJpY3QgUkZDIGNvbXBsaWFuY2UgICAqLw0KdmFyIGNocnN6ICAgPSA4OyAgLyogYml0cyBwZXIgaW5wdXQgY2hhcmFjdGVyLiA4IC0gQVNDSUk7IDE2IC0gVW5pY29kZSAgICAgICovDQoNCi8qDQogKiBUaGVzZSBhcmUgdGhlIGZ1bmN0aW9ucyB5b3UnbGwgdXN1YWxseSB3YW50IHRvIGNhbGwNCiAqIFRoZXkgdGFrZSBzdHJpbmcgYXJndW1lbnRzIGFuZCByZXR1cm4gZWl0aGVyIGhleCBvciBiYXNlLTY0IGVuY29kZWQgc3RyaW5ncw0KICovDQpmdW5jdGlvbiBoZXhfc2hhMShzKXtyZXR1cm4gYmluYjJoZXgoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBiNjRfc2hhMShzKXtyZXR1cm4gYmluYjJiNjQoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBzdHJfc2hhMShzKXtyZXR1cm4gYmluYjJzdHIoY29yZV9zaGExKHN0cjJiaW5iKHMpLHMubGVuZ3RoICogY2hyc3opKTt9DQpmdW5jdGlvbiBoZXhfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMmhleChjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQpmdW5jdGlvbiBiNjRfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMmI2NChjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQpmdW5jdGlvbiBzdHJfaG1hY19zaGExKGtleSwgZGF0YSl7IHJldHVybiBiaW5iMnN0cihjb3JlX2htYWNfc2hhMShrZXksIGRhdGEpKTt9DQoNCi8qDQogKiBQZXJmb3JtIGEgc2ltcGxlIHNlbGYtdGVzdCB0byBzZWUgaWYgdGhlIFZNIGlzIHdvcmtpbmcNCiAqLw0KZnVuY3Rpb24gc2hhMV92bV90ZXN0KCkNCnsNCiAgcmV0dXJuIGhleF9zaGExKCJhYmMiKSA9PSAiYTk5OTNlMzY0NzA2ODE2YWJhM2UyNTcxNzg1MGMyNmM5Y2QwZDg5ZCI7DQp9DQoNCi8qDQogKiBDYWxjdWxhdGUgdGhlIFNIQS0xIG9mIGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMsIGFuZCBhIGJpdCBsZW5ndGgNCiAqLw0KZnVuY3Rpb24gY29yZV9zaGExKHgsIGxlbikNCnsNCiAgLyogYXBwZW5kIHBhZGRpbmcgKi8NCiAgeFtsZW4gPj4gNV0gfD0gMHg4MCA8PCAoMjQgLSBsZW4gJSAzMik7DQogIHhbKChsZW4gKyA2NCA+PiA5KSA8PCA0KSArIDE1XSA9IGxlbjsNCg0KICB2YXIgdyA9IEFycmF5KDgwKTsNCiAgdmFyIGEgPSAgMTczMjU4NDE5MzsNCiAgdmFyIGIgPSAtMjcxNzMzODc5Ow0KICB2YXIgYyA9IC0xNzMyNTg0MTk0Ow0KICB2YXIgZCA9ICAyNzE3MzM4Nzg7DQogIHZhciBlID0gLTEwMDk1ODk3NzY7DQoNCiAgZm9yKHZhciBpID0gMDsgaSA8IHgubGVuZ3RoOyBpICs9IDE2KQ0KICB7DQogICAgdmFyIG9sZGEgPSBhOw0KICAgIHZhciBvbGRiID0gYjsNCiAgICB2YXIgb2xkYyA9IGM7DQogICAgdmFyIG9sZGQgPSBkOw0KICAgIHZhciBvbGRlID0gZTsNCg0KICAgIGZvcih2YXIgaiA9IDA7IGogPCA4MDsgaisrKQ0KICAgIHsNCiAgICAgIGlmKGogPCAxNikgd1tqXSA9IHhbaSArIGpdOw0KICAgICAgZWxzZSB3W2pdID0gcm9sKHdbai0zXSBeIHdbai04XSBeIHdbai0xNF0gXiB3W2otMTZdLCAxKTsNCiAgICAgIHZhciB0ID0gc2FmZV9hZGQoc2FmZV9hZGQocm9sKGEsIDUpLCBzaGExX2Z0KGosIGIsIGMsIGQpKSwNCiAgICAgICAgICAgICAgICAgICAgICAgc2FmZV9hZGQoc2FmZV9hZGQoZSwgd1tqXSksIHNoYTFfa3QoaikpKTsNCiAgICAgIGUgPSBkOw0KICAgICAgZCA9IGM7DQogICAgICBjID0gcm9sKGIsIDMwKTsNCiAgICAgIGIgPSBhOw0KICAgICAgYSA9IHQ7DQogICAgfQ0KDQogICAgYSA9IHNhZmVfYWRkKGEsIG9sZGEpOw0KICAgIGIgPSBzYWZlX2FkZChiLCBvbGRiKTsNCiAgICBjID0gc2FmZV9hZGQoYywgb2xkYyk7DQogICAgZCA9IHNhZmVfYWRkKGQsIG9sZGQpOw0KICAgIGUgPSBzYWZlX2FkZChlLCBvbGRlKTsNCiAgfQ0KICByZXR1cm4gQXJyYXkoYSwgYiwgYywgZCwgZSk7DQoNCn0NCg0KLyoNCiAqIFBlcmZvcm0gdGhlIGFwcHJvcHJpYXRlIHRyaXBsZXQgY29tYmluYXRpb24gZnVuY3Rpb24gZm9yIHRoZSBjdXJyZW50DQogKiBpdGVyYXRpb24NCiAqLw0KZnVuY3Rpb24gc2hhMV9mdCh0LCBiLCBjLCBkKQ0Kew0KICBpZih0IDwgMjApIHJldHVybiAoYiAmIGMpIHwgKCh+YikgJiBkKTsNCiAgaWYodCA8IDQwKSByZXR1cm4gYiBeIGMgXiBkOw0KICBpZih0IDwgNjApIHJldHVybiAoYiAmIGMpIHwgKGIgJiBkKSB8IChjICYgZCk7DQogIHJldHVybiBiIF4gYyBeIGQ7DQp9DQoNCi8qDQogKiBEZXRlcm1pbmUgdGhlIGFwcHJvcHJpYXRlIGFkZGl0aXZlIGNvbnN0YW50IGZvciB0aGUgY3VycmVudCBpdGVyYXRpb24NCiAqLw0KZnVuY3Rpb24gc2hhMV9rdCh0KQ0Kew0KICByZXR1cm4gKHQgPCAyMCkgPyAgMTUxODUwMDI0OSA6ICh0IDwgNDApID8gIDE4NTk3NzUzOTMgOg0KICAgICAgICAgKHQgPCA2MCkgPyAtMTg5NDAwNzU4OCA6IC04OTk0OTc1MTQ7DQp9DQoNCi8qDQogKiBDYWxjdWxhdGUgdGhlIEhNQUMtU0hBMSBvZiBhIGtleSBhbmQgc29tZSBkYXRhDQogKi8NCmZ1bmN0aW9uIGNvcmVfaG1hY19zaGExKGtleSwgZGF0YSkNCnsNCiAgdmFyIGJrZXkgPSBzdHIyYmluYihrZXkpOw0KICBpZihia2V5Lmxlbmd0aCA+IDE2KSBia2V5ID0gY29yZV9zaGExKGJrZXksIGtleS5sZW5ndGggKiBjaHJzeik7DQoNCiAgdmFyIGlwYWQgPSBBcnJheSgxNiksIG9wYWQgPSBBcnJheSgxNik7DQogIGZvcih2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKQ0KICB7DQogICAgaXBhZFtpXSA9IGJrZXlbaV0gXiAweDM2MzYzNjM2Ow0KICAgIG9wYWRbaV0gPSBia2V5W2ldIF4gMHg1QzVDNUM1QzsNCiAgfQ0KDQogIHZhciBoYXNoID0gY29yZV9zaGExKGlwYWQuY29uY2F0KHN0cjJiaW5iKGRhdGEpKSwgNTEyICsgZGF0YS5sZW5ndGggKiBjaHJzeik7DQogIHJldHVybiBjb3JlX3NoYTEob3BhZC5jb25jYXQoaGFzaCksIDUxMiArIDE2MCk7DQp9DQoNCi8qDQogKiBBZGQgaW50ZWdlcnMsIHdyYXBwaW5nIGF0IDJeMzIuIFRoaXMgdXNlcyAxNi1iaXQgb3BlcmF0aW9ucyBpbnRlcm5hbGx5DQogKiB0byB3b3JrIGFyb3VuZCBidWdzIGluIHNvbWUgSlMgaW50ZXJwcmV0ZXJzLg0KICovDQpmdW5jdGlvbiBzYWZlX2FkZCh4LCB5KQ0Kew0KICB2YXIgbHN3ID0gKHggJiAweEZGRkYpICsgKHkgJiAweEZGRkYpOw0KICB2YXIgbXN3ID0gKHggPj4gMTYpICsgKHkgPj4gMTYpICsgKGxzdyA+PiAxNik7DQogIHJldHVybiAobXN3IDw8IDE2KSB8IChsc3cgJiAweEZGRkYpOw0KfQ0KDQovKg0KICogQml0d2lzZSByb3RhdGUgYSAzMi1iaXQgbnVtYmVyIHRvIHRoZSBsZWZ0Lg0KICovDQpmdW5jdGlvbiByb2wobnVtLCBjbnQpDQp7DQogIHJldHVybiAobnVtIDw8IGNudCkgfCAobnVtID4+PiAoMzIgLSBjbnQpKTsNCn0NCg0KLyoNCiAqIENvbnZlcnQgYW4gOC1iaXQgb3IgMTYtYml0IHN0cmluZyB0byBhbiBhcnJheSBvZiBiaWctZW5kaWFuIHdvcmRzDQogKiBJbiA4LWJpdCBmdW5jdGlvbiwgY2hhcmFjdGVycyA+MjU1IGhhdmUgdGhlaXIgaGktYnl0ZSBzaWxlbnRseSBpZ25vcmVkLg0KICovDQpmdW5jdGlvbiBzdHIyYmluYihzdHIpDQp7DQogIHZhciBiaW4gPSBBcnJheSgpOw0KICB2YXIgbWFzayA9ICgxIDw8IGNocnN6KSAtIDE7DQogIGZvcih2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoICogY2hyc3o7IGkgKz0gY2hyc3opDQogICAgYmluW2k+PjVdIHw9IChzdHIuY2hhckNvZGVBdChpIC8gY2hyc3opICYgbWFzaykgPDwgKDMyIC0gY2hyc3ogLSBpJTMyKTsNCiAgcmV0dXJuIGJpbjsNCn0NCg0KLyoNCiAqIENvbnZlcnQgYW4gYXJyYXkgb2YgYmlnLWVuZGlhbiB3b3JkcyB0byBhIHN0cmluZw0KICovDQpmdW5jdGlvbiBiaW5iMnN0cihiaW4pDQp7DQogIHZhciBzdHIgPSAiIjsNCiAgdmFyIG1hc2sgPSAoMSA8PCBjaHJzeikgLSAxOw0KICBmb3IodmFyIGkgPSAwOyBpIDwgYmluLmxlbmd0aCAqIDMyOyBpICs9IGNocnN6KQ0KICAgIHN0ciArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChiaW5baT4+NV0gPj4+ICgzMiAtIGNocnN6IC0gaSUzMikpICYgbWFzayk7DQogIHJldHVybiBzdHI7DQp9DQoNCi8qDQogKiBDb252ZXJ0IGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMgdG8gYSBoZXggc3RyaW5nLg0KICovDQpmdW5jdGlvbiBiaW5iMmhleChiaW5hcnJheSkNCnsNCiAgdmFyIGhleF90YWIgPSBoZXhjYXNlID8gIjAxMjM0NTY3ODlBQkNERUYiIDogIjAxMjM0NTY3ODlhYmNkZWYiOw0KICB2YXIgc3RyID0gIiI7DQogIGZvcih2YXIgaSA9IDA7IGkgPCBiaW5hcnJheS5sZW5ndGggKiA0OyBpKyspDQogIHsNCiAgICBzdHIgKz0gaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoMyAtIGklNCkqOCs0KSkgJiAweEYpICsNCiAgICAgICAgICAgaGV4X3RhYi5jaGFyQXQoKGJpbmFycmF5W2k+PjJdID4+ICgoMyAtIGklNCkqOCAgKSkgJiAweEYpOw0KICB9DQogIHJldHVybiBzdHI7DQp9DQoNCi8qDQogKiBDb252ZXJ0IGFuIGFycmF5IG9mIGJpZy1lbmRpYW4gd29yZHMgdG8gYSBiYXNlLTY0IHN0cmluZw0KICovDQpmdW5jdGlvbiBiaW5iMmI2NChiaW5hcnJheSkNCnsNCiAgdmFyIHRhYiA9ICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvIjsNCiAgdmFyIHN0ciA9ICIiOw0KICBmb3IodmFyIGkgPSAwOyBpIDwgYmluYXJyYXkubGVuZ3RoICogNDsgaSArPSAzKQ0KICB7DQogICAgdmFyIHRyaXBsZXQgPSAoKChiaW5hcnJheVtpICAgPj4gMl0gPj4gOCAqICgzIC0gIGkgICAlNCkpICYgMHhGRikgPDwgMTYpDQogICAgICAgICAgICAgICAgfCAoKChiaW5hcnJheVtpKzEgPj4gMl0gPj4gOCAqICgzIC0gKGkrMSklNCkpICYgMHhGRikgPDwgOCApDQogICAgICAgICAgICAgICAgfCAgKChiaW5hcnJheVtpKzIgPj4gMl0gPj4gOCAqICgzIC0gKGkrMiklNCkpICYgMHhGRik7DQogICAgZm9yKHZhciBqID0gMDsgaiA8IDQ7IGorKykNCiAgICB7DQogICAgICBpZihpICogOCArIGogKiA2ID4gYmluYXJyYXkubGVuZ3RoICogMzIpIHN0ciArPSBiNjRwYWQ7DQogICAgICBlbHNlIHN0ciArPSB0YWIuY2hhckF0KCh0cmlwbGV0ID4+IDYqKDMtaikpICYgMHgzRik7DQogICAgfQ0KICB9DQogIHJldHVybiBzdHI7DQp9DQo="},"js/utils.js":{"content_type":"application/x-javascript","revpos":58,"data":"CnZhciBVdGlscyA9IHt9OwoKICAgIC8vIEZpbGUgc2l6ZSBwcmV0dHkgcHJpbnRpbmcKVXRpbHMuZm9ybWF0U2l6ZSA9IGZ1bmN0aW9uKHNpemUpIHsKICB2YXIganVtcCA9IDUxMjsKICBpZiAoc2l6ZSA8IGp1bXApIHJldHVybiBzaXplICsgIiBieXRlcyI7CiAgdmFyIHVuaXRzID0gWyJLQiIsICJNQiIsICJHQiIsICJUQiIsICJQQiIsICJFQiIsICJaQiIsICJZQiJdOwogIHZhciBpID0gMDsKICB3aGlsZSAoc2l6ZSA+PSBqdW1wICYmIGkgPCB1bml0cy5sZW5ndGgpIHsKICAgIGkgKz0gMTsKICAgIHNpemUgLz0gMTAyNAogIH0KICByZXR1cm4gc2l6ZS50b0ZpeGVkKDEpICsgJyAnICsgdW5pdHNbaSAtIDFdOwp9CgpVdGlscy5pc01vYmlsZSA9IGZ1bmN0aW9uKCkgewogIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkKICAgIC5tYXRjaCgvKGFuZHJvaWR8aXBob25lfGlwb2R8aXBhZCkvKSAhPT0gbnVsbDsKfTsKCgpmdW5jdGlvbiBsaW5rVXAoYm9keSwgcGVyc29uX3ByZWZpeCwgdGFnX3ByZWZpeCkgewoKICAvL2JvZHkgPSBNdXN0YWNoZS5lc2NhcGUoYm9keSk7CiAgcGVyc29uX3ByZWZpeCA9IHBlcnNvbl9wcmVmaXggfHwgIiMhL21lbnRpb25zLyI7CiAgdGFnX3ByZWZpeCA9IHRhZ19wcmVmaXggfHwgIiMhL3RhZ3MvIjsKCiAgdmFyIHRtcCA9IGJvZHkucmVwbGFjZSgvKChmdHB8aHR0cHxodHRwcyk6XC9cLyhcdys6ezAsMX1cdypAKT8oXFMrKSg6WzAtOV0rKT8oXC98XC8oW1x3IyE6Lj8rPSYlQCFcLVwvXSkpPykvZ2ksZnVuY3Rpb24oYSkgewogICAgcmV0dXJuICc8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iJythKyciPicrYSsnPC9hPic7CiAgfSk7CgogIGZ1bmN0aW9uIHRyYW5zZm9ybVRleHQoc3RyKSB7CiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1xAKFtcd1wtXSspL2csIGZ1bmN0aW9uKHVzZXIsbmFtZSkgewogICAgICByZXR1cm4gJzxhIGhyZWY9IicrcGVyc29uX3ByZWZpeCtlbmNvZGVVUklDb21wb25lbnQobmFtZSkrJyI+Jyt1c2VyKyc8L2E+JzsKICAgIH0pLnJlcGxhY2UoL1wjKFtcd1wtXC5dKykvZyxmdW5jdGlvbih3b3JkLHRhZykgewogICAgICByZXR1cm4gJzxhIGhyZWY9IicrdGFnX3ByZWZpeCtlbmNvZGVVUklDb21wb25lbnQodGFnKSsnIj4nK3dvcmQrJzwvYT4nOwogICAgfSk7CiAgfTsKCiAgZnVuY3Rpb24gcmVwbGFjZVRhZ3MoZG9tKSB7CiAgICB2YXIgaSwgdG1wOwogICAgZm9yIChpID0gMDsgaSA8IGRvbS5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgIHRtcCA9IChkb20uY2hpbGROb2Rlc1tpXS5ub2RlVHlwZSA9PT0gMyAmJgogICAgICAgICAgICAgJChkb20uY2hpbGROb2Rlc1tpXSkucGFyZW50cygiYSIpLmxlbmd0aCA9PT0gMCkKICAgICAgICA/ICQoIjxzcGFuPiIrdHJhbnNmb3JtVGV4dChkb20uY2hpbGROb2Rlc1tpXS50ZXh0Q29udGVudCkrIjwvc3Bhbj4iKVswXQogICAgICAgIDogcmVwbGFjZVRhZ3MoZG9tLmNoaWxkTm9kZXNbaV0pOwoKICAgICAgZG9tLnJlcGxhY2VDaGlsZCh0bXAsIGRvbS5jaGlsZE5vZGVzW2ldKTsKICAgIH0KICAgIHJldHVybiBkb207CiAgfTsKCiAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGRpdi5pbm5lckhUTUwgPSB0bXA7CiAgcmV0dXJuIHJlcGxhY2VUYWdzKGRpdikuaW5uZXJIVE1MOwoKICAvL3JldHVybiB0bXA7Cn07Cgp2YXIgZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uICgpIHsKICAgIHZhciAgICB0b2tlbiA9IC9kezEsNH18bXsxLDR9fHl5KD86eXkpP3woW0hoTXNUdF0pXDE/fFtMbG9TWl18IlteIl0qInwnW14nXSonL2csCgkJdGltZXpvbmUgPSAvXGIoPzpbUE1DRUFdW1NEUF1UfCg/OlBhY2lmaWN8TW91bnRhaW58Q2VudHJhbHxFYXN0ZXJufEF0bGFudGljKSAoPzpTdGFuZGFyZHxEYXlsaWdodHxQcmV2YWlsaW5nKSBUaW1lfCg/OkdNVHxVVEMpKD86Wy0rXVxkezR9KT8pXGIvZywKCQl0aW1lem9uZUNsaXAgPSAvW14tK1xkQS1aXS9nLAoJCXBhZCA9IGZ1bmN0aW9uICh2YWwsIGxlbikgewoJCQl2YWwgPSBTdHJpbmcodmFsKTsKCQkJbGVuID0gbGVuIHx8IDI7CgkJCXdoaWxlICh2YWwubGVuZ3RoIDwgbGVuKSB2YWwgPSAiMCIgKyB2YWw7CgkJCXJldHVybiB2YWw7CgkJfTsKCgkvLyBSZWdleGVzIGFuZCBzdXBwb3J0aW5nIGZ1bmN0aW9ucyBhcmUgY2FjaGVkIHRocm91Z2ggY2xvc3VyZQoJcmV0dXJuIGZ1bmN0aW9uIChkYXRlLCBtYXNrLCB1dGMpIHsKCQl2YXIgZEYgPSBkYXRlRm9ybWF0OwoKCQkvLyBZb3UgY2FuJ3QgcHJvdmlkZSB1dGMgaWYgeW91IHNraXAgb3RoZXIgYXJncyAodXNlIHRoZSAiVVRDOiIgbWFzayBwcmVmaXgpCgkJaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMSAmJiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZGF0ZSkgPT0gIltvYmplY3QgU3RyaW5nXSIgJiYgIS9cZC8udGVzdChkYXRlKSkgewoJCQltYXNrID0gZGF0ZTsKCQkJZGF0ZSA9IHVuZGVmaW5lZDsKCQl9CgoJCS8vIFBhc3NpbmcgZGF0ZSB0aHJvdWdoIERhdGUgYXBwbGllcyBEYXRlLnBhcnNlLCBpZiBuZWNlc3NhcnkKCQlkYXRlID0gZGF0ZSA/IG5ldyBEYXRlKGRhdGUpIDogbmV3IERhdGU7CgkJaWYgKGlzTmFOKGRhdGUpKSB0aHJvdyBTeW50YXhFcnJvcigiaW52YWxpZCBkYXRlIik7CgoJCW1hc2sgPSBTdHJpbmcoZEYubWFza3NbbWFza10gfHwgbWFzayB8fCBkRi5tYXNrc1siZGVmYXVsdCJdKTsKCgkJLy8gQWxsb3cgc2V0dGluZyB0aGUgdXRjIGFyZ3VtZW50IHZpYSB0aGUgbWFzawoJCWlmIChtYXNrLnNsaWNlKDAsIDQpID09ICJVVEM6IikgewoJCQltYXNrID0gbWFzay5zbGljZSg0KTsKCQkJdXRjID0gdHJ1ZTsKCQl9CgoJCXZhcglfID0gdXRjID8gImdldFVUQyIgOiAiZ2V0IiwKCQkJZCA9IGRhdGVbXyArICJEYXRlIl0oKSwKCQkJRCA9IGRhdGVbXyArICJEYXkiXSgpLAoJCQltID0gZGF0ZVtfICsgIk1vbnRoIl0oKSwKCQkJeSA9IGRhdGVbXyArICJGdWxsWWVhciJdKCksCgkJCUggPSBkYXRlW18gKyAiSG91cnMiXSgpLAoJCQlNID0gZGF0ZVtfICsgIk1pbnV0ZXMiXSgpLAoJCQlzID0gZGF0ZVtfICsgIlNlY29uZHMiXSgpLAoJCQlMID0gZGF0ZVtfICsgIk1pbGxpc2Vjb25kcyJdKCksCgkJCW8gPSB1dGMgPyAwIDogZGF0ZS5nZXRUaW1lem9uZU9mZnNldCgpLAoJCQlmbGFncyA9IHsKCQkJCWQ6ICAgIGQsCgkJCQlkZDogICBwYWQoZCksCgkJCQlkZGQ6ICBkRi5pMThuLmRheU5hbWVzW0RdLAoJCQkJZGRkZDogZEYuaTE4bi5kYXlOYW1lc1tEICsgN10sCgkJCQltOiAgICBtICsgMSwKCQkJCW1tOiAgIHBhZChtICsgMSksCgkJCQltbW06ICBkRi5pMThuLm1vbnRoTmFtZXNbbV0sCgkJCQltbW1tOiBkRi5pMThuLm1vbnRoTmFtZXNbbSArIDEyXSwKCQkJCXl5OiAgIFN0cmluZyh5KS5zbGljZSgyKSwKCQkJCXl5eXk6IHksCgkJCQloOiAgICBIICUgMTIgfHwgMTIsCgkJCQloaDogICBwYWQoSCAlIDEyIHx8IDEyKSwKCQkJCUg6ICAgIEgsCgkJCQlISDogICBwYWQoSCksCgkJCQlNOiAgICBNLAoJCQkJTU06ICAgcGFkKE0pLAoJCQkJczogICAgcywKCQkJCXNzOiAgIHBhZChzKSwKCQkJCWw6ICAgIHBhZChMLCAzKSwKCQkJCUw6ICAgIHBhZChMID4gOTkgPyBNYXRoLnJvdW5kKEwgLyAxMCkgOiBMKSwKCQkJCXQ6ICAgIEggPCAxMiA/ICJhIiAgOiAicCIsCgkJCQl0dDogICBIIDwgMTIgPyAiYW0iIDogInBtIiwKCQkJCVQ6ICAgIEggPCAxMiA/ICJBIiAgOiAiUCIsCgkJCQlUVDogICBIIDwgMTIgPyAiQU0iIDogIlBNIiwKCQkJCVo6ICAgIHV0YyA/ICJVVEMiIDogKFN0cmluZyhkYXRlKS5tYXRjaCh0aW1lem9uZSkgfHwgWyIiXSkucG9wKCkucmVwbGFjZSh0aW1lem9uZUNsaXAsICIiKSwKCQkJCW86ICAgIChvID4gMCA/ICItIiA6ICIrIikgKyBwYWQoTWF0aC5mbG9vcihNYXRoLmFicyhvKSAvIDYwKSAqIDEwMCArIE1hdGguYWJzKG8pICUgNjAsIDQpLAoJCQkJUzogICAgWyJ0aCIsICJzdCIsICJuZCIsICJyZCJdW2QgJSAxMCA+IDMgPyAwIDogKGQgJSAxMDAgLSBkICUgMTAgIT0gMTApICogZCAlIDEwXQoJCQl9OwoKCQlyZXR1cm4gbWFzay5yZXBsYWNlKHRva2VuLCBmdW5jdGlvbiAoJDApIHsKCQkJcmV0dXJuICQwIGluIGZsYWdzID8gZmxhZ3NbJDBdIDogJDAuc2xpY2UoMSwgJDAubGVuZ3RoIC0gMSk7CgkJfSk7Cgl9Owp9KCk7CgovLyBTb21lIGNvbW1vbiBmb3JtYXQgc3RyaW5ncwpkYXRlRm9ybWF0Lm1hc2tzID0gewoJImRlZmF1bHQiOiAgICAgICJkZGQgbW1tIGRkIHl5eXkgSEg6TU06c3MiLAoJc2hvcnREYXRlOiAgICAgICJtL2QveXkiLAoJbWVkaXVtRGF0ZTogICAgICJtbW0gZCwgeXl5eSIsCglsb25nRGF0ZTogICAgICAgIm1tbW0gZCwgeXl5eSIsCglmdWxsRGF0ZTogICAgICAgImRkZGQsIG1tbW0gZCwgeXl5eSIsCglzaG9ydFRpbWU6ICAgICAgImg6TU0gVFQiLAoJbWVkaXVtVGltZTogICAgICJoOk1NOnNzIFRUIiwKCWxvbmdUaW1lOiAgICAgICAiaDpNTTpzcyBUVCBaIiwKCWlzb0RhdGU6ICAgICAgICAieXl5eS1tbS1kZCIsCglpc29UaW1lOiAgICAgICAgIkhIOk1NOnNzIiwKCWlzb0RhdGVUaW1lOiAgICAieXl5eS1tbS1kZCdUJ0hIOk1NOnNzIiwKCWlzb1V0Y0RhdGVUaW1lOiAiVVRDOnl5eXktbW0tZGQnVCdISDpNTTpzcydaJyIKfTsKCi8vIEludGVybmF0aW9uYWxpemF0aW9uIHN0cmluZ3MKZGF0ZUZvcm1hdC5pMThuID0gewoJZGF5TmFtZXM6IFsKCQkiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0IiwKCQkiU3VuZGF5IiwgIk1vbmRheSIsICJUdWVzZGF5IiwgIldlZG5lc2RheSIsICJUaHVyc2RheSIsICJGcmlkYXkiLCAiU2F0dXJkYXkiCgldLAoJbW9udGhOYW1lczogWwoJCSJKYW4iLCAiRmViIiwgIk1hciIsICJBcHIiLCAiTWF5IiwgIkp1biIsICJKdWwiLCAiQXVnIiwgIlNlcCIsICJPY3QiLCAiTm92IiwgIkRlYyIsCgkJIkphbnVhcnkiLCAiRmVicnVhcnkiLCAiTWFyY2giLCAiQXByaWwiLCAiTWF5IiwgIkp1bmUiLCAiSnVseSIsICJBdWd1c3QiLCAiU2VwdGVtYmVyIiwgIk9jdG9iZXIiLCAiTm92ZW1iZXIiLCAiRGVjZW1iZXIiCgldCn07CgovLyBGb3IgY29udmVuaWVuY2UuLi4KRGF0ZS5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24gKG1hc2ssIHV0YykgewoJcmV0dXJuIGRhdGVGb3JtYXQodGhpcywgbWFzaywgdXRjKTsKfTsKCi8vIFRha2VzIGFuIElTTyB0aW1lIGFuZCByZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGluZyBob3cKLy8gbG9uZyBhZ28gdGhlIGRhdGUgcmVwcmVzZW50cy4KZnVuY3Rpb24gcHJldHR5RGF0ZShkYXRlKXsKCXZhciBkaWZmID0gKCgobmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gZGF0ZS5nZXRUaW1lKCkpIC8gMTAwMCksCgkJZGF5X2RpZmYgPSBNYXRoLmZsb29yKGRpZmYgLyA4NjQwMCk7CgoJaWYgKCBpc05hTihkYXlfZGlmZikgfHwgZGF5X2RpZmYgPCAwICkKCQlyZXR1cm47CgogICAgcmV0dXJuIGRheV9kaWZmID09IDAgJiYgKAoJCWRpZmYgPCA2MCAmJiAianVzdCBub3ciIHx8CgkJCWRpZmYgPCAxMjAgJiYgIjEgbWluIGFnbyIgfHwKCQkJZGlmZiA8IDM2MDAgJiYgTWF0aC5mbG9vciggZGlmZiAvIDYwICkgKyAiIG1pbiBhZ28iIHx8CgkJCWRpZmYgPCA3MjAwICYmICIxIGhvdXIgYWdvIiB8fAoJCQlkaWZmIDwgODY0MDAgJiYgTWF0aC5mbG9vciggZGlmZiAvIDM2MDAgKSArICIgaG91cnMgYWdvIikgfHwKCQlkYXlfZGlmZiA9PSAxICYmICJZZXN0ZXJkYXkiIHx8CgkJZGF5X2RpZmYgPCA3ICYmIGRheV9kaWZmICsgIiBkYXlzIGFnbyIgfHwKCQlkYXlfZGlmZiA8IDMxICYmIE1hdGguY2VpbCggZGF5X2RpZmYgLyA3ICkgKyAiIHdlZWtzIGFnbyIgfHwKICAgIGRheV9kaWZmIDwgMzY1ICYmIE1hdGguY2VpbCggZGF5X2RpZmYgLyAzMSkgKyAiIG1vbnRocyBhZ28iOwp9Owo="},"img/favicon.png":{"content_type":"image/png","revpos":58,"data":"AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAQHXAB4e2gDBv/kANS3sALe1+AAYEuQAysn4AMrI+gD///8A7Oz8AIWE7ACkofYADQreAHVw8gCbmu8AExPZACki6wAXEeQAAADWAK2q9wAJB9wAUVHjAP7+/gB6eukAwsL1ABkT5QACAtcANi7sACsr3QAiGusAGBPkAAYE2QAWEOMA9/f9ANTU+ADx8P0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCQAAAAAAAAAAABoeExMCCQkTExMTExMbHhoaHhMBDwkXFSAbExMTGx4aGh4eHgkJDB4eHh4eHh4eGhoeDRkJCQkWExMYCQkLHhoaBRAJCQkJCQojCSQfGx4aHQkJCQkJFAkJCQMeHh4GHQAHCQkJCB4eBA4eHh4eEgAAIQkJCQkcHhEeHh4eHhIAAAAJCQAiCQkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAMh/AAD//wAA//8AAP//AAA="}}}
